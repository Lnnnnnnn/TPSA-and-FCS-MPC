// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPCcore_MPCthread (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read3,
        p_read2,
        xn_current_0_i,
        xn_current_0_o,
        xn_current_0_o_ap_vld,
        xn_current_1_i,
        xn_current_1_o,
        xn_current_1_o_ap_vld,
        xn_current_2_i,
        xn_current_2_o,
        xn_current_2_o_ap_vld,
        xn_current_3_i,
        xn_current_3_o,
        xn_current_3_o_ap_vld,
        xn_current_4_i,
        xn_current_4_o,
        xn_current_4_o_ap_vld,
        xn_current_5_i,
        xn_current_5_o,
        xn_current_5_o_ap_vld,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read29,
        INIT_index,
        p_read30,
        INIT_branch,
        location_0_i,
        location_0_o,
        location_0_o_ap_vld,
        location_1_i,
        location_1_o,
        location_1_o_ap_vld,
        location_2_i,
        location_2_o,
        location_2_o_ap_vld,
        location_3_i,
        location_3_o,
        location_3_o_ap_vld,
        p_read28,
        p_read31,
        p_read32,
        p_read33,
        p_read34,
        helpedList_0_i,
        helpedList_0_o,
        helpedList_0_o_ap_vld,
        helpedList_1_i,
        helpedList_1_o,
        helpedList_1_o_ap_vld,
        helpedList_2_i,
        helpedList_2_o,
        helpedList_2_o_ap_vld,
        helpedList_3_i,
        helpedList_3_o,
        helpedList_3_o_ap_vld,
        assignmentList,
        helper_assignment_number,
        p_read36,
        p_read535,
        p_read636,
        p_read137,
        p_read238,
        p_read337,
        p_read439,
        p_read57,
        p_read68,
        p_read740,
        p_read841,
        Q_switchConst_IGBT,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32,
        ap_return_33,
        ap_return_34,
        ap_ce
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
input  [15:0] p_read1;
input  [7:0] p_read3;
input  [7:0] p_read2;
input  [15:0] xn_current_0_i;
output  [15:0] xn_current_0_o;
output   xn_current_0_o_ap_vld;
input  [15:0] xn_current_1_i;
output  [15:0] xn_current_1_o;
output   xn_current_1_o_ap_vld;
input  [15:0] xn_current_2_i;
output  [15:0] xn_current_2_o;
output   xn_current_2_o_ap_vld;
input  [15:0] xn_current_3_i;
output  [15:0] xn_current_3_o;
output   xn_current_3_o_ap_vld;
input  [15:0] xn_current_4_i;
output  [15:0] xn_current_4_o;
output   xn_current_4_o_ap_vld;
input  [15:0] xn_current_5_i;
output  [15:0] xn_current_5_o;
output   xn_current_5_o_ap_vld;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [15:0] p_read9;
input  [15:0] p_read10;
input  [15:0] p_read11;
input  [15:0] p_read12;
input  [15:0] p_read13;
input  [15:0] p_read14;
input  [15:0] p_read15;
input  [15:0] p_read16;
input  [15:0] p_read17;
input  [15:0] p_read18;
input  [15:0] p_read19;
input  [15:0] p_read20;
input  [15:0] p_read21;
input  [15:0] p_read22;
input  [15:0] p_read23;
input  [15:0] p_read24;
input  [15:0] p_read25;
input  [15:0] p_read26;
input  [15:0] p_read27;
input  [7:0] p_read29;
input  [7:0] INIT_index;
input  [7:0] p_read30;
input  [7:0] INIT_branch;
input  [7:0] location_0_i;
output  [7:0] location_0_o;
output   location_0_o_ap_vld;
input  [7:0] location_1_i;
output  [7:0] location_1_o;
output   location_1_o_ap_vld;
input  [7:0] location_2_i;
output  [7:0] location_2_o;
output   location_2_o_ap_vld;
input  [7:0] location_3_i;
output  [7:0] location_3_o;
output   location_3_o_ap_vld;
input  [31:0] p_read28;
input  [31:0] p_read31;
input  [31:0] p_read32;
input  [31:0] p_read33;
input  [31:0] p_read34;
input  [7:0] helpedList_0_i;
output  [7:0] helpedList_0_o;
output   helpedList_0_o_ap_vld;
input  [7:0] helpedList_1_i;
output  [7:0] helpedList_1_o;
output   helpedList_1_o_ap_vld;
input  [7:0] helpedList_2_i;
output  [7:0] helpedList_2_o;
output   helpedList_2_o_ap_vld;
input  [7:0] helpedList_3_i;
output  [7:0] helpedList_3_o;
output   helpedList_3_o_ap_vld;
input  [4:0] assignmentList;
input  [7:0] helper_assignment_number;
input  [15:0] p_read36;
input  [15:0] p_read535;
input  [4:0] p_read636;
input  [11:0] p_read137;
input  [7:0] p_read238;
input  [4:0] p_read337;
input  [11:0] p_read439;
input  [7:0] p_read57;
input  [2:0] p_read68;
input  [2:0] p_read740;
input  [2:0] p_read841;
input  [9:0] Q_switchConst_IGBT;
output  [15:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
output  [31:0] ap_return_4;
output  [7:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
output  [15:0] ap_return_10;
output  [15:0] ap_return_11;
output  [15:0] ap_return_12;
output  [15:0] ap_return_13;
output  [15:0] ap_return_14;
output  [15:0] ap_return_15;
output  [15:0] ap_return_16;
output  [15:0] ap_return_17;
output  [15:0] ap_return_18;
output  [15:0] ap_return_19;
output  [15:0] ap_return_20;
output  [15:0] ap_return_21;
output  [15:0] ap_return_22;
output  [15:0] ap_return_23;
output  [15:0] ap_return_24;
output  [15:0] ap_return_25;
output  [15:0] ap_return_26;
output  [15:0] ap_return_27;
output  [15:0] ap_return_28;
output  [15:0] ap_return_29;
output  [31:0] ap_return_30;
output  [31:0] ap_return_31;
output  [31:0] ap_return_32;
output  [31:0] ap_return_33;
output  [31:0] ap_return_34;
input   ap_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] xn_current_0_o;
reg[15:0] xn_current_1_o;
reg[15:0] xn_current_2_o;
reg[15:0] xn_current_3_o;
reg[15:0] xn_current_4_o;
reg[15:0] xn_current_5_o;
reg[7:0] location_0_o;
reg[7:0] location_1_o;
reg[7:0] location_2_o;
reg[7:0] location_3_o;
reg[7:0] helpedList_0_o;
reg[7:0] helpedList_1_o;
reg[7:0] helpedList_2_o;
reg[7:0] helpedList_3_o;
reg[15:0] ap_return_0;
reg[7:0] ap_return_1;
reg[7:0] ap_return_2;
reg[7:0] ap_return_3;
reg[31:0] ap_return_4;
reg[7:0] ap_return_5;
reg[15:0] ap_return_6;
reg[15:0] ap_return_7;
reg[15:0] ap_return_8;
reg[15:0] ap_return_9;
reg[15:0] ap_return_10;
reg[15:0] ap_return_11;
reg[15:0] ap_return_12;
reg[15:0] ap_return_13;
reg[15:0] ap_return_14;
reg[15:0] ap_return_15;
reg[15:0] ap_return_16;
reg[15:0] ap_return_17;
reg[15:0] ap_return_18;
reg[15:0] ap_return_19;
reg[15:0] ap_return_20;
reg[15:0] ap_return_21;
reg[15:0] ap_return_22;
reg[15:0] ap_return_23;
reg[15:0] ap_return_24;
reg[15:0] ap_return_25;
reg[15:0] ap_return_26;
reg[15:0] ap_return_27;
reg[15:0] ap_return_28;
reg[15:0] ap_return_29;
reg[31:0] ap_return_30;
reg[31:0] ap_return_31;
reg[31:0] ap_return_32;
reg[31:0] ap_return_33;
reg[31:0] ap_return_34;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] empty_fu_954_p1;
reg   [0:0] empty_reg_1649;
wire   [0:0] icmp_ln814_fu_969_p2;
reg   [0:0] icmp_ln814_reg_1654;
wire    grp_ThreadPE_fu_803_ap_start;
wire    grp_ThreadPE_fu_803_ap_done;
wire    grp_ThreadPE_fu_803_ap_idle;
wire    grp_ThreadPE_fu_803_ap_ready;
wire   [15:0] grp_ThreadPE_fu_803_xn_current_0_o;
wire    grp_ThreadPE_fu_803_xn_current_0_o_ap_vld;
wire   [15:0] grp_ThreadPE_fu_803_xn_current_1_o;
wire    grp_ThreadPE_fu_803_xn_current_1_o_ap_vld;
wire   [15:0] grp_ThreadPE_fu_803_xn_current_2_o;
wire    grp_ThreadPE_fu_803_xn_current_2_o_ap_vld;
wire   [15:0] grp_ThreadPE_fu_803_xn_current_3_o;
wire    grp_ThreadPE_fu_803_xn_current_3_o_ap_vld;
wire   [15:0] grp_ThreadPE_fu_803_xn_current_4_o;
wire    grp_ThreadPE_fu_803_xn_current_4_o_ap_vld;
wire   [15:0] grp_ThreadPE_fu_803_xn_current_5_o;
wire    grp_ThreadPE_fu_803_xn_current_5_o_ap_vld;
wire   [7:0] grp_ThreadPE_fu_803_location_0_o;
wire    grp_ThreadPE_fu_803_location_0_o_ap_vld;
wire   [7:0] grp_ThreadPE_fu_803_location_1_o;
wire    grp_ThreadPE_fu_803_location_1_o_ap_vld;
wire   [7:0] grp_ThreadPE_fu_803_location_2_o;
wire    grp_ThreadPE_fu_803_location_2_o_ap_vld;
wire   [7:0] grp_ThreadPE_fu_803_location_3_o;
wire    grp_ThreadPE_fu_803_location_3_o_ap_vld;
wire   [7:0] grp_ThreadPE_fu_803_helpedList_0_o;
wire    grp_ThreadPE_fu_803_helpedList_0_o_ap_vld;
wire   [7:0] grp_ThreadPE_fu_803_helpedList_1_o;
wire    grp_ThreadPE_fu_803_helpedList_1_o_ap_vld;
wire   [7:0] grp_ThreadPE_fu_803_helpedList_2_o;
wire    grp_ThreadPE_fu_803_helpedList_2_o_ap_vld;
wire   [7:0] grp_ThreadPE_fu_803_helpedList_3_o;
wire    grp_ThreadPE_fu_803_helpedList_3_o_ap_vld;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_0;
wire   [7:0] grp_ThreadPE_fu_803_ap_return_1;
wire   [7:0] grp_ThreadPE_fu_803_ap_return_2;
wire   [7:0] grp_ThreadPE_fu_803_ap_return_3;
wire   [31:0] grp_ThreadPE_fu_803_ap_return_4;
wire   [7:0] grp_ThreadPE_fu_803_ap_return_5;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_6;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_7;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_8;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_9;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_10;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_11;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_12;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_13;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_14;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_15;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_16;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_17;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_18;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_19;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_20;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_21;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_22;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_23;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_24;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_25;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_26;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_27;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_28;
wire   [15:0] grp_ThreadPE_fu_803_ap_return_29;
wire   [31:0] grp_ThreadPE_fu_803_ap_return_30;
wire   [31:0] grp_ThreadPE_fu_803_ap_return_31;
wire   [31:0] grp_ThreadPE_fu_803_ap_return_32;
wire   [31:0] grp_ThreadPE_fu_803_ap_return_33;
wire   [31:0] grp_ThreadPE_fu_803_ap_return_34;
reg    grp_ThreadPE_fu_803_ap_ce;
wire    ap_CS_fsm_state2;
reg   [15:0] ap_phi_mux_CalcNum_0_phi_fu_491_p4;
reg   [15:0] CalcNum_0_reg_488;
reg    ap_block_state2_on_subcall_done;
reg   [7:0] ap_phi_mux_nextgate_0_phi_fu_500_p4;
reg   [7:0] nextgate_0_reg_497;
reg   [7:0] ap_phi_mux_index_0_phi_fu_509_p4;
reg   [7:0] index_0_reg_506;
reg   [7:0] ap_phi_mux_branch_0_phi_fu_518_p4;
reg   [7:0] branch_0_reg_515;
reg   [31:0] ap_phi_mux_Jmin_0_phi_fu_527_p4;
reg   [31:0] Jmin_0_reg_524;
reg   [7:0] ap_phi_mux_state_0_phi_fu_536_p4;
reg   [7:0] state_0_reg_533;
reg   [15:0] ap_phi_mux_xn_visited_0_0_0_phi_fu_545_p4;
reg   [15:0] xn_visited_0_0_0_reg_542;
reg   [15:0] ap_phi_mux_xn_visited_0_1_0_phi_fu_554_p4;
reg   [15:0] xn_visited_0_1_0_reg_551;
reg   [15:0] ap_phi_mux_xn_visited_0_2_0_phi_fu_563_p4;
reg   [15:0] xn_visited_0_2_0_reg_560;
reg   [15:0] ap_phi_mux_xn_visited_0_3_0_phi_fu_572_p4;
reg   [15:0] xn_visited_0_3_0_reg_569;
reg   [15:0] ap_phi_mux_xn_visited_0_4_0_phi_fu_581_p4;
reg   [15:0] xn_visited_0_4_0_reg_578;
reg   [15:0] ap_phi_mux_xn_visited_0_5_0_phi_fu_590_p4;
reg   [15:0] xn_visited_0_5_0_reg_587;
reg   [15:0] ap_phi_mux_xn_visited_1_0_0_phi_fu_599_p4;
reg   [15:0] xn_visited_1_0_0_reg_596;
reg   [15:0] ap_phi_mux_xn_visited_1_1_0_phi_fu_608_p4;
reg   [15:0] xn_visited_1_1_0_reg_605;
reg   [15:0] ap_phi_mux_xn_visited_1_2_0_phi_fu_617_p4;
reg   [15:0] xn_visited_1_2_0_reg_614;
reg   [15:0] ap_phi_mux_xn_visited_1_3_0_phi_fu_626_p4;
reg   [15:0] xn_visited_1_3_0_reg_623;
reg   [15:0] ap_phi_mux_xn_visited_1_4_0_phi_fu_635_p4;
reg   [15:0] xn_visited_1_4_0_reg_632;
reg   [15:0] ap_phi_mux_xn_visited_1_5_0_phi_fu_644_p4;
reg   [15:0] xn_visited_1_5_0_reg_641;
reg   [15:0] ap_phi_mux_xn_visited_2_0_0_phi_fu_653_p4;
reg   [15:0] xn_visited_2_0_0_reg_650;
reg   [15:0] ap_phi_mux_xn_visited_2_1_0_phi_fu_662_p4;
reg   [15:0] xn_visited_2_1_0_reg_659;
reg   [15:0] ap_phi_mux_xn_visited_2_2_0_phi_fu_671_p4;
reg   [15:0] xn_visited_2_2_0_reg_668;
reg   [15:0] ap_phi_mux_xn_visited_2_3_0_phi_fu_680_p4;
reg   [15:0] xn_visited_2_3_0_reg_677;
reg   [15:0] ap_phi_mux_xn_visited_2_4_0_phi_fu_689_p4;
reg   [15:0] xn_visited_2_4_0_reg_686;
reg   [15:0] ap_phi_mux_xn_visited_2_5_0_phi_fu_698_p4;
reg   [15:0] xn_visited_2_5_0_reg_695;
reg   [15:0] ap_phi_mux_xn_visited_3_0_0_phi_fu_707_p4;
reg   [15:0] xn_visited_3_0_0_reg_704;
reg   [15:0] ap_phi_mux_xn_visited_3_1_0_phi_fu_716_p4;
reg   [15:0] xn_visited_3_1_0_reg_713;
reg   [15:0] ap_phi_mux_xn_visited_3_2_0_phi_fu_725_p4;
reg   [15:0] xn_visited_3_2_0_reg_722;
reg   [15:0] ap_phi_mux_xn_visited_3_3_0_phi_fu_734_p4;
reg   [15:0] xn_visited_3_3_0_reg_731;
reg   [15:0] ap_phi_mux_xn_visited_3_4_0_phi_fu_743_p4;
reg   [15:0] xn_visited_3_4_0_reg_740;
reg   [15:0] ap_phi_mux_xn_visited_3_5_0_phi_fu_752_p4;
reg   [15:0] xn_visited_3_5_0_reg_749;
reg   [31:0] ap_phi_mux_J_current_0_phi_fu_761_p4;
reg   [31:0] J_current_0_reg_758;
reg   [31:0] ap_phi_mux_J_visited_0_0_phi_fu_770_p4;
reg   [31:0] J_visited_0_0_reg_767;
reg   [31:0] ap_phi_mux_J_visited_1_0_phi_fu_779_p4;
reg   [31:0] J_visited_1_0_reg_776;
reg   [31:0] ap_phi_mux_J_visited_2_0_phi_fu_788_p4;
reg   [31:0] J_visited_2_0_reg_785;
reg   [31:0] ap_phi_mux_J_visited_3_0_phi_fu_797_p4;
reg   [31:0] J_visited_3_0_reg_794;
reg    grp_ThreadPE_fu_803_ap_start_reg;
wire   [6:0] tmp_fu_959_p4;
reg   [15:0] ap_return_0_preg;
reg   [7:0] ap_return_1_preg;
reg   [7:0] ap_return_2_preg;
reg   [7:0] ap_return_3_preg;
reg   [31:0] ap_return_4_preg;
reg   [7:0] ap_return_5_preg;
reg   [15:0] ap_return_6_preg;
reg   [15:0] ap_return_7_preg;
reg   [15:0] ap_return_8_preg;
reg   [15:0] ap_return_9_preg;
reg   [15:0] ap_return_10_preg;
reg   [15:0] ap_return_11_preg;
reg   [15:0] ap_return_12_preg;
reg   [15:0] ap_return_13_preg;
reg   [15:0] ap_return_14_preg;
reg   [15:0] ap_return_15_preg;
reg   [15:0] ap_return_16_preg;
reg   [15:0] ap_return_17_preg;
reg   [15:0] ap_return_18_preg;
reg   [15:0] ap_return_19_preg;
reg   [15:0] ap_return_20_preg;
reg   [15:0] ap_return_21_preg;
reg   [15:0] ap_return_22_preg;
reg   [15:0] ap_return_23_preg;
reg   [15:0] ap_return_24_preg;
reg   [15:0] ap_return_25_preg;
reg   [15:0] ap_return_26_preg;
reg   [15:0] ap_return_27_preg;
reg   [15:0] ap_return_28_preg;
reg   [15:0] ap_return_29_preg;
reg   [31:0] ap_return_30_preg;
reg   [31:0] ap_return_31_preg;
reg   [31:0] ap_return_32_preg;
reg   [31:0] ap_return_33_preg;
reg   [31:0] ap_return_34_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_condition_4518;
reg    ap_condition_4522;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 grp_ThreadPE_fu_803_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 16'd0;
#0 ap_return_1_preg = 8'd0;
#0 ap_return_2_preg = 8'd0;
#0 ap_return_3_preg = 8'd0;
#0 ap_return_4_preg = 32'd0;
#0 ap_return_5_preg = 8'd0;
#0 ap_return_6_preg = 16'd0;
#0 ap_return_7_preg = 16'd0;
#0 ap_return_8_preg = 16'd0;
#0 ap_return_9_preg = 16'd0;
#0 ap_return_10_preg = 16'd0;
#0 ap_return_11_preg = 16'd0;
#0 ap_return_12_preg = 16'd0;
#0 ap_return_13_preg = 16'd0;
#0 ap_return_14_preg = 16'd0;
#0 ap_return_15_preg = 16'd0;
#0 ap_return_16_preg = 16'd0;
#0 ap_return_17_preg = 16'd0;
#0 ap_return_18_preg = 16'd0;
#0 ap_return_19_preg = 16'd0;
#0 ap_return_20_preg = 16'd0;
#0 ap_return_21_preg = 16'd0;
#0 ap_return_22_preg = 16'd0;
#0 ap_return_23_preg = 16'd0;
#0 ap_return_24_preg = 16'd0;
#0 ap_return_25_preg = 16'd0;
#0 ap_return_26_preg = 16'd0;
#0 ap_return_27_preg = 16'd0;
#0 ap_return_28_preg = 16'd0;
#0 ap_return_29_preg = 16'd0;
#0 ap_return_30_preg = 32'd0;
#0 ap_return_31_preg = 32'd0;
#0 ap_return_32_preg = 32'd0;
#0 ap_return_33_preg = 32'd0;
#0 ap_return_34_preg = 32'd0;
end

MPCcore_ThreadPE grp_ThreadPE_fu_803(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ThreadPE_fu_803_ap_start),
    .ap_done(grp_ThreadPE_fu_803_ap_done),
    .ap_idle(grp_ThreadPE_fu_803_ap_idle),
    .ap_ready(grp_ThreadPE_fu_803_ap_ready),
    .p_read(p_read),
    .p_read1(p_read1),
    .p_read4(p_read3),
    .p_read2(empty_reg_1649),
    .xn_current_0_i(xn_current_0_i),
    .xn_current_0_o(grp_ThreadPE_fu_803_xn_current_0_o),
    .xn_current_0_o_ap_vld(grp_ThreadPE_fu_803_xn_current_0_o_ap_vld),
    .xn_current_1_i(xn_current_1_i),
    .xn_current_1_o(grp_ThreadPE_fu_803_xn_current_1_o),
    .xn_current_1_o_ap_vld(grp_ThreadPE_fu_803_xn_current_1_o_ap_vld),
    .xn_current_2_i(xn_current_2_i),
    .xn_current_2_o(grp_ThreadPE_fu_803_xn_current_2_o),
    .xn_current_2_o_ap_vld(grp_ThreadPE_fu_803_xn_current_2_o_ap_vld),
    .xn_current_3_i(xn_current_3_i),
    .xn_current_3_o(grp_ThreadPE_fu_803_xn_current_3_o),
    .xn_current_3_o_ap_vld(grp_ThreadPE_fu_803_xn_current_3_o_ap_vld),
    .xn_current_4_i(xn_current_4_i),
    .xn_current_4_o(grp_ThreadPE_fu_803_xn_current_4_o),
    .xn_current_4_o_ap_vld(grp_ThreadPE_fu_803_xn_current_4_o_ap_vld),
    .xn_current_5_i(xn_current_5_i),
    .xn_current_5_o(grp_ThreadPE_fu_803_xn_current_5_o),
    .xn_current_5_o_ap_vld(grp_ThreadPE_fu_803_xn_current_5_o_ap_vld),
    .p_read3(p_read4),
    .p_read5(p_read5),
    .p_read6(p_read6),
    .p_read7(p_read7),
    .p_read8(p_read8),
    .p_read9(p_read9),
    .p_read10(p_read10),
    .p_read11(p_read11),
    .p_read12(p_read12),
    .p_read13(p_read13),
    .p_read14(p_read14),
    .p_read15(p_read15),
    .p_read16(p_read16),
    .p_read17(p_read17),
    .p_read18(p_read18),
    .p_read19(p_read19),
    .p_read20(p_read20),
    .p_read21(p_read21),
    .p_read22(p_read22),
    .p_read23(p_read23),
    .p_read24(p_read24),
    .p_read25(p_read25),
    .p_read26(p_read26),
    .p_read27(p_read27),
    .p_read80(p_read29),
    .p_read81(INIT_index),
    .p_read82(p_read30),
    .p_read31(INIT_branch),
    .location_0_i(location_0_i),
    .location_0_o(grp_ThreadPE_fu_803_location_0_o),
    .location_0_o_ap_vld(grp_ThreadPE_fu_803_location_0_o_ap_vld),
    .location_1_i(location_1_i),
    .location_1_o(grp_ThreadPE_fu_803_location_1_o),
    .location_1_o_ap_vld(grp_ThreadPE_fu_803_location_1_o_ap_vld),
    .location_2_i(location_2_i),
    .location_2_o(grp_ThreadPE_fu_803_location_2_o),
    .location_2_o_ap_vld(grp_ThreadPE_fu_803_location_2_o_ap_vld),
    .location_3_i(location_3_i),
    .location_3_o(grp_ThreadPE_fu_803_location_3_o),
    .location_3_o_ap_vld(grp_ThreadPE_fu_803_location_3_o_ap_vld),
    .p_read28(p_read28),
    .p_read29(p_read31),
    .p_read30(p_read32),
    .p_read32(p_read33),
    .p_read33(p_read34),
    .helpedList_0_i(helpedList_0_i),
    .helpedList_0_o(grp_ThreadPE_fu_803_helpedList_0_o),
    .helpedList_0_o_ap_vld(grp_ThreadPE_fu_803_helpedList_0_o_ap_vld),
    .helpedList_1_i(helpedList_1_i),
    .helpedList_1_o(grp_ThreadPE_fu_803_helpedList_1_o),
    .helpedList_1_o_ap_vld(grp_ThreadPE_fu_803_helpedList_1_o_ap_vld),
    .helpedList_2_i(helpedList_2_i),
    .helpedList_2_o(grp_ThreadPE_fu_803_helpedList_2_o),
    .helpedList_2_o_ap_vld(grp_ThreadPE_fu_803_helpedList_2_o_ap_vld),
    .helpedList_3_i(helpedList_3_i),
    .helpedList_3_o(grp_ThreadPE_fu_803_helpedList_3_o),
    .helpedList_3_o_ap_vld(grp_ThreadPE_fu_803_helpedList_3_o_ap_vld),
    .p_read37(assignmentList),
    .helper_assignment_number(helper_assignment_number),
    .p_read38(p_read68),
    .p_read39(p_read740),
    .p_read40(p_read841),
    .p_read98(p_read36),
    .p_read99(p_read535),
    .p_read41(p_read636),
    .p_read42(p_read137),
    .p_read43(p_read238),
    .p_read44(p_read337),
    .p_read45(p_read439),
    .p_read46(p_read57),
    .Q_switchConst_IGBT(Q_switchConst_IGBT),
    .ap_return_0(grp_ThreadPE_fu_803_ap_return_0),
    .ap_return_1(grp_ThreadPE_fu_803_ap_return_1),
    .ap_return_2(grp_ThreadPE_fu_803_ap_return_2),
    .ap_return_3(grp_ThreadPE_fu_803_ap_return_3),
    .ap_return_4(grp_ThreadPE_fu_803_ap_return_4),
    .ap_return_5(grp_ThreadPE_fu_803_ap_return_5),
    .ap_return_6(grp_ThreadPE_fu_803_ap_return_6),
    .ap_return_7(grp_ThreadPE_fu_803_ap_return_7),
    .ap_return_8(grp_ThreadPE_fu_803_ap_return_8),
    .ap_return_9(grp_ThreadPE_fu_803_ap_return_9),
    .ap_return_10(grp_ThreadPE_fu_803_ap_return_10),
    .ap_return_11(grp_ThreadPE_fu_803_ap_return_11),
    .ap_return_12(grp_ThreadPE_fu_803_ap_return_12),
    .ap_return_13(grp_ThreadPE_fu_803_ap_return_13),
    .ap_return_14(grp_ThreadPE_fu_803_ap_return_14),
    .ap_return_15(grp_ThreadPE_fu_803_ap_return_15),
    .ap_return_16(grp_ThreadPE_fu_803_ap_return_16),
    .ap_return_17(grp_ThreadPE_fu_803_ap_return_17),
    .ap_return_18(grp_ThreadPE_fu_803_ap_return_18),
    .ap_return_19(grp_ThreadPE_fu_803_ap_return_19),
    .ap_return_20(grp_ThreadPE_fu_803_ap_return_20),
    .ap_return_21(grp_ThreadPE_fu_803_ap_return_21),
    .ap_return_22(grp_ThreadPE_fu_803_ap_return_22),
    .ap_return_23(grp_ThreadPE_fu_803_ap_return_23),
    .ap_return_24(grp_ThreadPE_fu_803_ap_return_24),
    .ap_return_25(grp_ThreadPE_fu_803_ap_return_25),
    .ap_return_26(grp_ThreadPE_fu_803_ap_return_26),
    .ap_return_27(grp_ThreadPE_fu_803_ap_return_27),
    .ap_return_28(grp_ThreadPE_fu_803_ap_return_28),
    .ap_return_29(grp_ThreadPE_fu_803_ap_return_29),
    .ap_return_30(grp_ThreadPE_fu_803_ap_return_30),
    .ap_return_31(grp_ThreadPE_fu_803_ap_return_31),
    .ap_return_32(grp_ThreadPE_fu_803_ap_return_32),
    .ap_return_33(grp_ThreadPE_fu_803_ap_return_33),
    .ap_return_34(grp_ThreadPE_fu_803_ap_return_34),
    .ap_ce(grp_ThreadPE_fu_803_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        if ((1'b1 == ap_ce)) begin
            ap_CS_fsm <= ap_NS_fsm;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_0_preg <= ap_phi_mux_CalcNum_0_phi_fu_491_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_10_preg <= ap_phi_mux_xn_visited_0_4_0_phi_fu_581_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_11_preg <= ap_phi_mux_xn_visited_0_5_0_phi_fu_590_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_12_preg <= ap_phi_mux_xn_visited_1_0_0_phi_fu_599_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_13_preg <= ap_phi_mux_xn_visited_1_1_0_phi_fu_608_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_14_preg <= ap_phi_mux_xn_visited_1_2_0_phi_fu_617_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_15_preg <= ap_phi_mux_xn_visited_1_3_0_phi_fu_626_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_16_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_16_preg <= ap_phi_mux_xn_visited_1_4_0_phi_fu_635_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_17_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_17_preg <= ap_phi_mux_xn_visited_1_5_0_phi_fu_644_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_18_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_18_preg <= ap_phi_mux_xn_visited_2_0_0_phi_fu_653_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_19_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_19_preg <= ap_phi_mux_xn_visited_2_1_0_phi_fu_662_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_1_preg <= ap_phi_mux_nextgate_0_phi_fu_500_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_20_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_20_preg <= ap_phi_mux_xn_visited_2_2_0_phi_fu_671_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_21_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_21_preg <= ap_phi_mux_xn_visited_2_3_0_phi_fu_680_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_22_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_22_preg <= ap_phi_mux_xn_visited_2_4_0_phi_fu_689_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_23_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_23_preg <= ap_phi_mux_xn_visited_2_5_0_phi_fu_698_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_24_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_24_preg <= ap_phi_mux_xn_visited_3_0_0_phi_fu_707_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_25_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_25_preg <= ap_phi_mux_xn_visited_3_1_0_phi_fu_716_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_26_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_26_preg <= ap_phi_mux_xn_visited_3_2_0_phi_fu_725_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_27_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_27_preg <= ap_phi_mux_xn_visited_3_3_0_phi_fu_734_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_28_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_28_preg <= ap_phi_mux_xn_visited_3_4_0_phi_fu_743_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_29_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_29_preg <= ap_phi_mux_xn_visited_3_5_0_phi_fu_752_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_2_preg <= ap_phi_mux_index_0_phi_fu_509_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_30_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_30_preg <= ap_phi_mux_J_current_0_phi_fu_761_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_31_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_31_preg <= ap_phi_mux_J_visited_0_0_phi_fu_770_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_32_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_32_preg <= ap_phi_mux_J_visited_1_0_phi_fu_779_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_33_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_33_preg <= ap_phi_mux_J_visited_2_0_phi_fu_788_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_34_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_34_preg <= ap_phi_mux_J_visited_3_0_phi_fu_797_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_3_preg <= ap_phi_mux_branch_0_phi_fu_518_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_4_preg <= ap_phi_mux_Jmin_0_phi_fu_527_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_5_preg <= ap_phi_mux_state_0_phi_fu_536_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_6_preg <= ap_phi_mux_xn_visited_0_0_0_phi_fu_545_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_7_preg <= ap_phi_mux_xn_visited_0_1_0_phi_fu_554_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_8_preg <= ap_phi_mux_xn_visited_0_2_0_phi_fu_563_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
            ap_return_9_preg <= ap_phi_mux_xn_visited_0_3_0_phi_fu_572_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ThreadPE_fu_803_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (icmp_ln814_fu_969_p2 == 1'd1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_ThreadPE_fu_803_ap_start_reg <= 1'b1;
        end else if ((grp_ThreadPE_fu_803_ap_ready == 1'b1)) begin
            grp_ThreadPE_fu_803_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            CalcNum_0_reg_488 <= p_read1;
        end else if ((1'b1 == ap_condition_4518)) begin
            CalcNum_0_reg_488 <= grp_ThreadPE_fu_803_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            J_current_0_reg_758 <= p_read28;
        end else if ((1'b1 == ap_condition_4518)) begin
            J_current_0_reg_758 <= grp_ThreadPE_fu_803_ap_return_30;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            J_visited_0_0_reg_767 <= p_read31;
        end else if ((1'b1 == ap_condition_4518)) begin
            J_visited_0_0_reg_767 <= grp_ThreadPE_fu_803_ap_return_31;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            J_visited_1_0_reg_776 <= p_read32;
        end else if ((1'b1 == ap_condition_4518)) begin
            J_visited_1_0_reg_776 <= grp_ThreadPE_fu_803_ap_return_32;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            J_visited_2_0_reg_785 <= p_read33;
        end else if ((1'b1 == ap_condition_4518)) begin
            J_visited_2_0_reg_785 <= grp_ThreadPE_fu_803_ap_return_33;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            J_visited_3_0_reg_794 <= p_read34;
        end else if ((1'b1 == ap_condition_4518)) begin
            J_visited_3_0_reg_794 <= grp_ThreadPE_fu_803_ap_return_34;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            Jmin_0_reg_524 <= p_read;
        end else if ((1'b1 == ap_condition_4518)) begin
            Jmin_0_reg_524 <= grp_ThreadPE_fu_803_ap_return_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            branch_0_reg_515 <= p_read30;
        end else if ((1'b1 == ap_condition_4518)) begin
            branch_0_reg_515 <= grp_ThreadPE_fu_803_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            index_0_reg_506 <= p_read29;
        end else if ((1'b1 == ap_condition_4518)) begin
            index_0_reg_506 <= grp_ThreadPE_fu_803_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            nextgate_0_reg_497 <= p_read3;
        end else if ((1'b1 == ap_condition_4518)) begin
            nextgate_0_reg_497 <= grp_ThreadPE_fu_803_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            state_0_reg_533 <= p_read2;
        end else if ((1'b1 == ap_condition_4518)) begin
            state_0_reg_533 <= grp_ThreadPE_fu_803_ap_return_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_0_0_0_reg_542 <= p_read4;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_0_0_0_reg_542 <= grp_ThreadPE_fu_803_ap_return_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_0_1_0_reg_551 <= p_read5;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_0_1_0_reg_551 <= grp_ThreadPE_fu_803_ap_return_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_0_2_0_reg_560 <= p_read6;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_0_2_0_reg_560 <= grp_ThreadPE_fu_803_ap_return_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_0_3_0_reg_569 <= p_read7;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_0_3_0_reg_569 <= grp_ThreadPE_fu_803_ap_return_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_0_4_0_reg_578 <= p_read8;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_0_4_0_reg_578 <= grp_ThreadPE_fu_803_ap_return_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_0_5_0_reg_587 <= p_read9;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_0_5_0_reg_587 <= grp_ThreadPE_fu_803_ap_return_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_1_0_0_reg_596 <= p_read10;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_1_0_0_reg_596 <= grp_ThreadPE_fu_803_ap_return_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_1_1_0_reg_605 <= p_read11;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_1_1_0_reg_605 <= grp_ThreadPE_fu_803_ap_return_13;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_1_2_0_reg_614 <= p_read12;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_1_2_0_reg_614 <= grp_ThreadPE_fu_803_ap_return_14;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_1_3_0_reg_623 <= p_read13;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_1_3_0_reg_623 <= grp_ThreadPE_fu_803_ap_return_15;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_1_4_0_reg_632 <= p_read14;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_1_4_0_reg_632 <= grp_ThreadPE_fu_803_ap_return_16;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_1_5_0_reg_641 <= p_read15;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_1_5_0_reg_641 <= grp_ThreadPE_fu_803_ap_return_17;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_2_0_0_reg_650 <= p_read16;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_2_0_0_reg_650 <= grp_ThreadPE_fu_803_ap_return_18;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_2_1_0_reg_659 <= p_read17;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_2_1_0_reg_659 <= grp_ThreadPE_fu_803_ap_return_19;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_2_2_0_reg_668 <= p_read18;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_2_2_0_reg_668 <= grp_ThreadPE_fu_803_ap_return_20;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_2_3_0_reg_677 <= p_read19;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_2_3_0_reg_677 <= grp_ThreadPE_fu_803_ap_return_21;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_2_4_0_reg_686 <= p_read20;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_2_4_0_reg_686 <= grp_ThreadPE_fu_803_ap_return_22;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_2_5_0_reg_695 <= p_read21;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_2_5_0_reg_695 <= grp_ThreadPE_fu_803_ap_return_23;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_3_0_0_reg_704 <= p_read22;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_3_0_0_reg_704 <= grp_ThreadPE_fu_803_ap_return_24;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_3_1_0_reg_713 <= p_read23;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_3_1_0_reg_713 <= grp_ThreadPE_fu_803_ap_return_25;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_3_2_0_reg_722 <= p_read24;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_3_2_0_reg_722 <= grp_ThreadPE_fu_803_ap_return_26;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_3_3_0_reg_731 <= p_read25;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_3_3_0_reg_731 <= grp_ThreadPE_fu_803_ap_return_27;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_3_4_0_reg_740 <= p_read26;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_3_4_0_reg_740 <= grp_ThreadPE_fu_803_ap_return_28;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4522)) begin
            xn_visited_3_5_0_reg_749 <= p_read27;
        end else if ((1'b1 == ap_condition_4518)) begin
            xn_visited_3_5_0_reg_749 <= grp_ThreadPE_fu_803_ap_return_29;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_1649 <= empty_fu_954_p1;
        icmp_ln814_reg_1654 <= icmp_ln814_fu_969_p2;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (1'b0 == ap_ce))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_ce) | (1'b1 == ap_block_state2_on_subcall_done))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_CalcNum_0_phi_fu_491_p4 = grp_ThreadPE_fu_803_ap_return_0;
    end else begin
        ap_phi_mux_CalcNum_0_phi_fu_491_p4 = CalcNum_0_reg_488;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_J_current_0_phi_fu_761_p4 = grp_ThreadPE_fu_803_ap_return_30;
    end else begin
        ap_phi_mux_J_current_0_phi_fu_761_p4 = J_current_0_reg_758;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_J_visited_0_0_phi_fu_770_p4 = grp_ThreadPE_fu_803_ap_return_31;
    end else begin
        ap_phi_mux_J_visited_0_0_phi_fu_770_p4 = J_visited_0_0_reg_767;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_J_visited_1_0_phi_fu_779_p4 = grp_ThreadPE_fu_803_ap_return_32;
    end else begin
        ap_phi_mux_J_visited_1_0_phi_fu_779_p4 = J_visited_1_0_reg_776;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_J_visited_2_0_phi_fu_788_p4 = grp_ThreadPE_fu_803_ap_return_33;
    end else begin
        ap_phi_mux_J_visited_2_0_phi_fu_788_p4 = J_visited_2_0_reg_785;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_J_visited_3_0_phi_fu_797_p4 = grp_ThreadPE_fu_803_ap_return_34;
    end else begin
        ap_phi_mux_J_visited_3_0_phi_fu_797_p4 = J_visited_3_0_reg_794;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_Jmin_0_phi_fu_527_p4 = grp_ThreadPE_fu_803_ap_return_4;
    end else begin
        ap_phi_mux_Jmin_0_phi_fu_527_p4 = Jmin_0_reg_524;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_branch_0_phi_fu_518_p4 = grp_ThreadPE_fu_803_ap_return_3;
    end else begin
        ap_phi_mux_branch_0_phi_fu_518_p4 = branch_0_reg_515;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_index_0_phi_fu_509_p4 = grp_ThreadPE_fu_803_ap_return_2;
    end else begin
        ap_phi_mux_index_0_phi_fu_509_p4 = index_0_reg_506;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_nextgate_0_phi_fu_500_p4 = grp_ThreadPE_fu_803_ap_return_1;
    end else begin
        ap_phi_mux_nextgate_0_phi_fu_500_p4 = nextgate_0_reg_497;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_state_0_phi_fu_536_p4 = grp_ThreadPE_fu_803_ap_return_5;
    end else begin
        ap_phi_mux_state_0_phi_fu_536_p4 = state_0_reg_533;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_0_0_0_phi_fu_545_p4 = grp_ThreadPE_fu_803_ap_return_6;
    end else begin
        ap_phi_mux_xn_visited_0_0_0_phi_fu_545_p4 = xn_visited_0_0_0_reg_542;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_0_1_0_phi_fu_554_p4 = grp_ThreadPE_fu_803_ap_return_7;
    end else begin
        ap_phi_mux_xn_visited_0_1_0_phi_fu_554_p4 = xn_visited_0_1_0_reg_551;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_0_2_0_phi_fu_563_p4 = grp_ThreadPE_fu_803_ap_return_8;
    end else begin
        ap_phi_mux_xn_visited_0_2_0_phi_fu_563_p4 = xn_visited_0_2_0_reg_560;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_0_3_0_phi_fu_572_p4 = grp_ThreadPE_fu_803_ap_return_9;
    end else begin
        ap_phi_mux_xn_visited_0_3_0_phi_fu_572_p4 = xn_visited_0_3_0_reg_569;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_0_4_0_phi_fu_581_p4 = grp_ThreadPE_fu_803_ap_return_10;
    end else begin
        ap_phi_mux_xn_visited_0_4_0_phi_fu_581_p4 = xn_visited_0_4_0_reg_578;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_0_5_0_phi_fu_590_p4 = grp_ThreadPE_fu_803_ap_return_11;
    end else begin
        ap_phi_mux_xn_visited_0_5_0_phi_fu_590_p4 = xn_visited_0_5_0_reg_587;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_1_0_0_phi_fu_599_p4 = grp_ThreadPE_fu_803_ap_return_12;
    end else begin
        ap_phi_mux_xn_visited_1_0_0_phi_fu_599_p4 = xn_visited_1_0_0_reg_596;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_1_1_0_phi_fu_608_p4 = grp_ThreadPE_fu_803_ap_return_13;
    end else begin
        ap_phi_mux_xn_visited_1_1_0_phi_fu_608_p4 = xn_visited_1_1_0_reg_605;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_1_2_0_phi_fu_617_p4 = grp_ThreadPE_fu_803_ap_return_14;
    end else begin
        ap_phi_mux_xn_visited_1_2_0_phi_fu_617_p4 = xn_visited_1_2_0_reg_614;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_1_3_0_phi_fu_626_p4 = grp_ThreadPE_fu_803_ap_return_15;
    end else begin
        ap_phi_mux_xn_visited_1_3_0_phi_fu_626_p4 = xn_visited_1_3_0_reg_623;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_1_4_0_phi_fu_635_p4 = grp_ThreadPE_fu_803_ap_return_16;
    end else begin
        ap_phi_mux_xn_visited_1_4_0_phi_fu_635_p4 = xn_visited_1_4_0_reg_632;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_1_5_0_phi_fu_644_p4 = grp_ThreadPE_fu_803_ap_return_17;
    end else begin
        ap_phi_mux_xn_visited_1_5_0_phi_fu_644_p4 = xn_visited_1_5_0_reg_641;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_2_0_0_phi_fu_653_p4 = grp_ThreadPE_fu_803_ap_return_18;
    end else begin
        ap_phi_mux_xn_visited_2_0_0_phi_fu_653_p4 = xn_visited_2_0_0_reg_650;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_2_1_0_phi_fu_662_p4 = grp_ThreadPE_fu_803_ap_return_19;
    end else begin
        ap_phi_mux_xn_visited_2_1_0_phi_fu_662_p4 = xn_visited_2_1_0_reg_659;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_2_2_0_phi_fu_671_p4 = grp_ThreadPE_fu_803_ap_return_20;
    end else begin
        ap_phi_mux_xn_visited_2_2_0_phi_fu_671_p4 = xn_visited_2_2_0_reg_668;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_2_3_0_phi_fu_680_p4 = grp_ThreadPE_fu_803_ap_return_21;
    end else begin
        ap_phi_mux_xn_visited_2_3_0_phi_fu_680_p4 = xn_visited_2_3_0_reg_677;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_2_4_0_phi_fu_689_p4 = grp_ThreadPE_fu_803_ap_return_22;
    end else begin
        ap_phi_mux_xn_visited_2_4_0_phi_fu_689_p4 = xn_visited_2_4_0_reg_686;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_2_5_0_phi_fu_698_p4 = grp_ThreadPE_fu_803_ap_return_23;
    end else begin
        ap_phi_mux_xn_visited_2_5_0_phi_fu_698_p4 = xn_visited_2_5_0_reg_695;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_3_0_0_phi_fu_707_p4 = grp_ThreadPE_fu_803_ap_return_24;
    end else begin
        ap_phi_mux_xn_visited_3_0_0_phi_fu_707_p4 = xn_visited_3_0_0_reg_704;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_3_1_0_phi_fu_716_p4 = grp_ThreadPE_fu_803_ap_return_25;
    end else begin
        ap_phi_mux_xn_visited_3_1_0_phi_fu_716_p4 = xn_visited_3_1_0_reg_713;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_3_2_0_phi_fu_725_p4 = grp_ThreadPE_fu_803_ap_return_26;
    end else begin
        ap_phi_mux_xn_visited_3_2_0_phi_fu_725_p4 = xn_visited_3_2_0_reg_722;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_3_3_0_phi_fu_734_p4 = grp_ThreadPE_fu_803_ap_return_27;
    end else begin
        ap_phi_mux_xn_visited_3_3_0_phi_fu_734_p4 = xn_visited_3_3_0_reg_731;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_3_4_0_phi_fu_743_p4 = grp_ThreadPE_fu_803_ap_return_28;
    end else begin
        ap_phi_mux_xn_visited_3_4_0_phi_fu_743_p4 = xn_visited_3_4_0_reg_740;
    end
end

always @ (*) begin
    if (((icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_xn_visited_3_5_0_phi_fu_752_p4 = grp_ThreadPE_fu_803_ap_return_29;
    end else begin
        ap_phi_mux_xn_visited_3_5_0_phi_fu_752_p4 = xn_visited_3_5_0_reg_749;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_0 = ap_phi_mux_CalcNum_0_phi_fu_491_p4;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_1 = ap_phi_mux_nextgate_0_phi_fu_500_p4;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_10 = ap_phi_mux_xn_visited_0_4_0_phi_fu_581_p4;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_11 = ap_phi_mux_xn_visited_0_5_0_phi_fu_590_p4;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_12 = ap_phi_mux_xn_visited_1_0_0_phi_fu_599_p4;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_13 = ap_phi_mux_xn_visited_1_1_0_phi_fu_608_p4;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_14 = ap_phi_mux_xn_visited_1_2_0_phi_fu_617_p4;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_15 = ap_phi_mux_xn_visited_1_3_0_phi_fu_626_p4;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_16 = ap_phi_mux_xn_visited_1_4_0_phi_fu_635_p4;
    end else begin
        ap_return_16 = ap_return_16_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_17 = ap_phi_mux_xn_visited_1_5_0_phi_fu_644_p4;
    end else begin
        ap_return_17 = ap_return_17_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_18 = ap_phi_mux_xn_visited_2_0_0_phi_fu_653_p4;
    end else begin
        ap_return_18 = ap_return_18_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_19 = ap_phi_mux_xn_visited_2_1_0_phi_fu_662_p4;
    end else begin
        ap_return_19 = ap_return_19_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_2 = ap_phi_mux_index_0_phi_fu_509_p4;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_20 = ap_phi_mux_xn_visited_2_2_0_phi_fu_671_p4;
    end else begin
        ap_return_20 = ap_return_20_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_21 = ap_phi_mux_xn_visited_2_3_0_phi_fu_680_p4;
    end else begin
        ap_return_21 = ap_return_21_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_22 = ap_phi_mux_xn_visited_2_4_0_phi_fu_689_p4;
    end else begin
        ap_return_22 = ap_return_22_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_23 = ap_phi_mux_xn_visited_2_5_0_phi_fu_698_p4;
    end else begin
        ap_return_23 = ap_return_23_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_24 = ap_phi_mux_xn_visited_3_0_0_phi_fu_707_p4;
    end else begin
        ap_return_24 = ap_return_24_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_25 = ap_phi_mux_xn_visited_3_1_0_phi_fu_716_p4;
    end else begin
        ap_return_25 = ap_return_25_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_26 = ap_phi_mux_xn_visited_3_2_0_phi_fu_725_p4;
    end else begin
        ap_return_26 = ap_return_26_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_27 = ap_phi_mux_xn_visited_3_3_0_phi_fu_734_p4;
    end else begin
        ap_return_27 = ap_return_27_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_28 = ap_phi_mux_xn_visited_3_4_0_phi_fu_743_p4;
    end else begin
        ap_return_28 = ap_return_28_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_29 = ap_phi_mux_xn_visited_3_5_0_phi_fu_752_p4;
    end else begin
        ap_return_29 = ap_return_29_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_3 = ap_phi_mux_branch_0_phi_fu_518_p4;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_30 = ap_phi_mux_J_current_0_phi_fu_761_p4;
    end else begin
        ap_return_30 = ap_return_30_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_31 = ap_phi_mux_J_visited_0_0_phi_fu_770_p4;
    end else begin
        ap_return_31 = ap_return_31_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_32 = ap_phi_mux_J_visited_1_0_phi_fu_779_p4;
    end else begin
        ap_return_32 = ap_return_32_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_33 = ap_phi_mux_J_visited_2_0_phi_fu_788_p4;
    end else begin
        ap_return_33 = ap_return_33_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_34 = ap_phi_mux_J_visited_3_0_phi_fu_797_p4;
    end else begin
        ap_return_34 = ap_return_34_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_4 = ap_phi_mux_Jmin_0_phi_fu_527_p4;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_5 = ap_phi_mux_state_0_phi_fu_536_p4;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_6 = ap_phi_mux_xn_visited_0_0_0_phi_fu_545_p4;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_7 = ap_phi_mux_xn_visited_0_1_0_phi_fu_554_p4;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_8 = ap_phi_mux_xn_visited_0_2_0_phi_fu_563_p4;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        ap_return_9 = ap_phi_mux_xn_visited_0_3_0_phi_fu_572_p4;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & ((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))))) begin
        grp_ThreadPE_fu_803_ap_ce = 1'b1;
    end else begin
        grp_ThreadPE_fu_803_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_helpedList_0_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        helpedList_0_o = grp_ThreadPE_fu_803_helpedList_0_o;
    end else begin
        helpedList_0_o = helpedList_0_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_helpedList_1_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        helpedList_1_o = grp_ThreadPE_fu_803_helpedList_1_o;
    end else begin
        helpedList_1_o = helpedList_1_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_helpedList_2_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        helpedList_2_o = grp_ThreadPE_fu_803_helpedList_2_o;
    end else begin
        helpedList_2_o = helpedList_2_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_helpedList_3_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        helpedList_3_o = grp_ThreadPE_fu_803_helpedList_3_o;
    end else begin
        helpedList_3_o = helpedList_3_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_location_0_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        location_0_o = grp_ThreadPE_fu_803_location_0_o;
    end else begin
        location_0_o = location_0_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_location_1_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        location_1_o = grp_ThreadPE_fu_803_location_1_o;
    end else begin
        location_1_o = location_1_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_location_2_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        location_2_o = grp_ThreadPE_fu_803_location_2_o;
    end else begin
        location_2_o = location_2_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_location_3_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        location_3_o = grp_ThreadPE_fu_803_location_3_o;
    end else begin
        location_3_o = location_3_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_xn_current_0_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        xn_current_0_o = grp_ThreadPE_fu_803_xn_current_0_o;
    end else begin
        xn_current_0_o = xn_current_0_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_xn_current_1_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        xn_current_1_o = grp_ThreadPE_fu_803_xn_current_1_o;
    end else begin
        xn_current_1_o = xn_current_1_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_xn_current_2_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        xn_current_2_o = grp_ThreadPE_fu_803_xn_current_2_o;
    end else begin
        xn_current_2_o = xn_current_2_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_xn_current_3_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        xn_current_3_o = grp_ThreadPE_fu_803_xn_current_3_o;
    end else begin
        xn_current_3_o = xn_current_3_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_xn_current_4_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        xn_current_4_o = grp_ThreadPE_fu_803_xn_current_4_o;
    end else begin
        xn_current_4_o = xn_current_4_i;
    end
end

always @ (*) begin
    if (((grp_ThreadPE_fu_803_xn_current_5_o_ap_vld == 1'b1) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        xn_current_5_o = grp_ThreadPE_fu_803_xn_current_5_o;
    end else begin
        xn_current_5_o = xn_current_5_i;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_ThreadPE_fu_803_ap_done == 1'b0) & (icmp_ln814_reg_1654 == 1'd1));
end

always @ (*) begin
    ap_condition_4518 = ((1'b0 == ap_block_state2_on_subcall_done) & (icmp_ln814_reg_1654 == 1'd1) & (1'b1 == ap_CS_fsm_state2));
end

always @ (*) begin
    ap_condition_4522 = ((ap_start == 1'b1) & (icmp_ln814_fu_969_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1));
end

assign empty_fu_954_p1 = p_read2[0:0];

assign grp_ThreadPE_fu_803_ap_start = grp_ThreadPE_fu_803_ap_start_reg;

assign helpedList_0_o_ap_vld = grp_ThreadPE_fu_803_helpedList_0_o_ap_vld;

assign helpedList_1_o_ap_vld = grp_ThreadPE_fu_803_helpedList_1_o_ap_vld;

assign helpedList_2_o_ap_vld = grp_ThreadPE_fu_803_helpedList_2_o_ap_vld;

assign helpedList_3_o_ap_vld = grp_ThreadPE_fu_803_helpedList_3_o_ap_vld;

assign icmp_ln814_fu_969_p2 = ((tmp_fu_959_p4 == 7'd0) ? 1'b1 : 1'b0);

assign location_0_o_ap_vld = grp_ThreadPE_fu_803_location_0_o_ap_vld;

assign location_1_o_ap_vld = grp_ThreadPE_fu_803_location_1_o_ap_vld;

assign location_2_o_ap_vld = grp_ThreadPE_fu_803_location_2_o_ap_vld;

assign location_3_o_ap_vld = grp_ThreadPE_fu_803_location_3_o_ap_vld;

assign tmp_fu_959_p4 = {{p_read2[7:1]}};

assign xn_current_0_o_ap_vld = grp_ThreadPE_fu_803_xn_current_0_o_ap_vld;

assign xn_current_1_o_ap_vld = grp_ThreadPE_fu_803_xn_current_1_o_ap_vld;

assign xn_current_2_o_ap_vld = grp_ThreadPE_fu_803_xn_current_2_o_ap_vld;

assign xn_current_3_o_ap_vld = grp_ThreadPE_fu_803_xn_current_3_o_ap_vld;

assign xn_current_4_o_ap_vld = grp_ThreadPE_fu_803_xn_current_4_o_ap_vld;

assign xn_current_5_o_ap_vld = grp_ThreadPE_fu_803_xn_current_5_o_ap_vld;

endmodule //MPCcore_MPCthread
