// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPCcore_MPCallocate_0627 (
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        p_read31,
        p_read32,
        p_read33,
        p_read34,
        p_read35,
        p_read36,
        p_read37,
        p_read38,
        p_read39,
        p_read40,
        p_read41,
        p_read42,
        p_read43,
        p_read44,
        p_read45,
        p_read46,
        p_read47,
        p_read48,
        p_read49,
        p_read50,
        p_read51,
        p_read52,
        p_read53,
        p_read54,
        p_read55,
        p_read56,
        p_read57,
        p_read58,
        p_read59,
        p_read60,
        p_read61,
        p_read62,
        p_read63,
        p_read64,
        p_read65,
        p_read66,
        p_read67,
        p_read68,
        p_read69,
        p_read70,
        p_read71,
        p_read72,
        p_read73,
        p_read74,
        p_read75,
        p_read76,
        p_read77,
        p_read78,
        p_read79,
        p_read80,
        p_read81,
        p_read82,
        p_read83,
        p_read84,
        p_read85,
        p_read86,
        p_read87,
        p_read88,
        p_read89,
        p_read90,
        p_read91,
        p_read92,
        p_read93,
        p_read94,
        p_read95,
        p_read96,
        p_read97,
        p_read98,
        p_read99,
        p_read100,
        p_read101,
        p_read102,
        p_read103,
        p_read104,
        p_read105,
        p_read106,
        p_read107,
        p_read108,
        p_read109,
        p_read110,
        p_read111,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_ce
);


output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
input  [7:0] p_read16;
input  [7:0] p_read17;
input  [7:0] p_read18;
input  [7:0] p_read19;
input  [7:0] p_read20;
input  [7:0] p_read21;
input  [7:0] p_read22;
input  [7:0] p_read23;
input  [7:0] p_read24;
input  [7:0] p_read25;
input  [7:0] p_read26;
input  [7:0] p_read27;
input  [7:0] p_read28;
input  [7:0] p_read29;
input  [7:0] p_read30;
input  [7:0] p_read31;
input  [7:0] p_read32;
input  [7:0] p_read33;
input  [7:0] p_read34;
input  [7:0] p_read35;
input  [7:0] p_read36;
input  [7:0] p_read37;
input  [7:0] p_read38;
input  [7:0] p_read39;
input  [7:0] p_read40;
input  [7:0] p_read41;
input  [7:0] p_read42;
input  [7:0] p_read43;
input  [7:0] p_read44;
input  [7:0] p_read45;
input  [7:0] p_read46;
input  [7:0] p_read47;
input  [7:0] p_read48;
input  [7:0] p_read49;
input  [7:0] p_read50;
input  [7:0] p_read51;
input  [7:0] p_read52;
input  [7:0] p_read53;
input  [7:0] p_read54;
input  [7:0] p_read55;
input  [7:0] p_read56;
input  [7:0] p_read57;
input  [7:0] p_read58;
input  [7:0] p_read59;
input  [7:0] p_read60;
input  [7:0] p_read61;
input  [7:0] p_read62;
input  [7:0] p_read63;
input  [7:0] p_read64;
input  [7:0] p_read65;
input  [7:0] p_read66;
input  [7:0] p_read67;
input  [7:0] p_read68;
input  [7:0] p_read69;
input  [7:0] p_read70;
input  [7:0] p_read71;
input  [7:0] p_read72;
input  [7:0] p_read73;
input  [7:0] p_read74;
input  [7:0] p_read75;
input  [7:0] p_read76;
input  [7:0] p_read77;
input  [7:0] p_read78;
input  [7:0] p_read79;
input  [7:0] p_read80;
input  [7:0] p_read81;
input  [7:0] p_read82;
input  [7:0] p_read83;
input  [7:0] p_read84;
input  [7:0] p_read85;
input  [7:0] p_read86;
input  [7:0] p_read87;
input  [7:0] p_read88;
input  [7:0] p_read89;
input  [7:0] p_read90;
input  [7:0] p_read91;
input  [7:0] p_read92;
input  [7:0] p_read93;
input  [7:0] p_read94;
input  [7:0] p_read95;
input  [7:0] p_read96;
input  [7:0] p_read97;
input  [7:0] p_read98;
input  [7:0] p_read99;
input  [7:0] p_read100;
input  [7:0] p_read101;
input  [7:0] p_read102;
input  [7:0] p_read103;
input  [7:0] p_read104;
input  [7:0] p_read105;
input  [7:0] p_read106;
input  [7:0] p_read107;
input  [7:0] p_read108;
input  [7:0] p_read109;
input  [7:0] p_read110;
input  [7:0] p_read111;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
output  [7:0] ap_return_4;
output  [7:0] ap_return_5;
output  [7:0] ap_return_6;
output  [7:0] ap_return_7;
output  [7:0] ap_return_8;
output  [7:0] ap_return_9;
output  [7:0] ap_return_10;
output  [7:0] ap_return_11;
output  [7:0] ap_return_12;
output  [7:0] ap_return_13;
output  [7:0] ap_return_14;
output  [7:0] ap_return_15;
output  [7:0] ap_return_16;
output  [7:0] ap_return_17;
output  [7:0] ap_return_18;
output  [7:0] ap_return_19;
output  [7:0] ap_return_20;
output  [7:0] ap_return_21;
output  [7:0] ap_return_22;
output  [7:0] ap_return_23;
output  [7:0] ap_return_24;
output  [7:0] ap_return_25;
output  [7:0] ap_return_26;
output  [7:0] ap_return_27;
output  [7:0] ap_return_28;
output  [7:0] ap_return_29;
output  [7:0] ap_return_30;
output  [7:0] ap_return_31;
input   ap_ce;

wire   [0:0] getHelperList_buffer_V_fu_938_p2;
wire   [7:0] tmp_fu_952_p6;
wire   [7:0] t1_V_fu_966_p2;
wire   [0:0] icmp_ln1065_fu_972_p2;
wire   [0:0] icmp_ln1073_fu_978_p2;
wire   [0:0] icmp_ln1065_6_fu_990_p2;
wire   [7:0] select_ln929_fu_996_p3;
wire   [0:0] and_ln928_fu_984_p2;
wire   [7:0] sub_ln929_fu_1004_p2;
wire   [0:0] icmp_ln1065_7_fu_1018_p2;
wire   [7:0] tmp_s_fu_1032_p6;
wire   [7:0] t1_V_1_fu_1046_p2;
wire   [0:0] icmp_ln1065_8_fu_1052_p2;
wire   [0:0] icmp_ln1073_5_fu_1058_p2;
wire   [0:0] icmp_ln1065_9_fu_1070_p2;
wire   [7:0] select_ln929_1_fu_1076_p3;
wire   [0:0] and_ln928_1_fu_1064_p2;
wire   [7:0] sub_ln929_1_fu_1084_p2;
wire   [0:0] icmp_ln1065_10_fu_1098_p2;
wire   [7:0] tmp_195_fu_1112_p6;
wire   [7:0] t1_V_2_fu_1126_p2;
wire   [0:0] icmp_ln1065_11_fu_1132_p2;
wire   [0:0] icmp_ln1073_6_fu_1138_p2;
wire   [0:0] icmp_ln1065_12_fu_1150_p2;
wire   [7:0] select_ln929_2_fu_1156_p3;
wire   [0:0] and_ln928_2_fu_1144_p2;
wire   [7:0] sub_ln929_2_fu_1164_p2;
wire   [0:0] icmp_ln1065_13_fu_1178_p2;
wire   [7:0] tmp_196_fu_1192_p6;
wire   [7:0] t1_V_3_fu_1206_p2;
wire   [0:0] icmp_ln1065_14_fu_1212_p2;
wire   [0:0] icmp_ln1073_7_fu_1218_p2;
wire   [0:0] icmp_ln1065_15_fu_1230_p2;
wire   [7:0] select_ln929_3_fu_1236_p3;
wire   [0:0] and_ln928_3_fu_1224_p2;
wire   [7:0] sub_ln929_3_fu_1244_p2;
wire   [0:0] icmp_ln1065_16_fu_1258_p2;
wire   [7:0] tmp_197_fu_1272_p6;
wire   [7:0] t1_V_4_fu_1286_p2;
wire   [0:0] icmp_ln1065_17_fu_1292_p2;
wire   [0:0] icmp_ln1073_8_fu_1298_p2;
wire   [0:0] icmp_ln1065_18_fu_1310_p2;
wire   [7:0] select_ln929_4_fu_1316_p3;
wire   [0:0] and_ln928_4_fu_1304_p2;
wire   [7:0] sub_ln929_4_fu_1324_p2;
wire   [0:0] icmp_ln1065_19_fu_1338_p2;
wire   [7:0] tmp_198_fu_1352_p6;
wire   [7:0] t1_V_5_fu_1366_p2;
wire   [0:0] icmp_ln1065_20_fu_1372_p2;
wire   [0:0] icmp_ln1073_9_fu_1378_p2;
wire   [0:0] icmp_ln1065_21_fu_1390_p2;
wire   [7:0] select_ln929_5_fu_1396_p3;
wire   [0:0] and_ln928_5_fu_1384_p2;
wire   [7:0] sub_ln929_5_fu_1404_p2;
wire   [0:0] icmp_ln1065_22_fu_1418_p2;
wire   [7:0] tmp_199_fu_1432_p6;
wire   [7:0] t1_V_6_fu_1446_p2;
wire   [0:0] icmp_ln1065_23_fu_1452_p2;
wire   [0:0] icmp_ln1073_10_fu_1458_p2;
wire   [0:0] icmp_ln1065_24_fu_1470_p2;
wire   [7:0] select_ln929_6_fu_1476_p3;
wire   [0:0] and_ln928_6_fu_1464_p2;
wire   [7:0] sub_ln929_6_fu_1484_p2;
wire   [0:0] icmp_ln1065_25_fu_1498_p2;
wire   [7:0] tmp_200_fu_1512_p6;
wire   [7:0] t1_V_7_fu_1526_p2;
wire   [0:0] icmp_ln1065_26_fu_1532_p2;
wire   [0:0] icmp_ln1073_11_fu_1538_p2;
wire   [0:0] icmp_ln1065_27_fu_1550_p2;
wire   [7:0] select_ln929_7_fu_1556_p3;
wire   [0:0] and_ln928_7_fu_1544_p2;
wire   [7:0] sub_ln929_7_fu_1564_p2;
wire   [0:0] icmp_ln1065_28_fu_1578_p2;
wire   [7:0] tmp_201_fu_1592_p6;
wire   [7:0] t1_V_8_fu_1606_p2;
wire   [0:0] icmp_ln1065_29_fu_1612_p2;
wire   [0:0] icmp_ln1073_12_fu_1618_p2;
wire   [0:0] icmp_ln1065_30_fu_1630_p2;
wire   [7:0] select_ln929_8_fu_1636_p3;
wire   [0:0] and_ln928_8_fu_1624_p2;
wire   [7:0] sub_ln929_8_fu_1644_p2;
wire   [0:0] icmp_ln1065_31_fu_1658_p2;
wire   [7:0] tmp_202_fu_1672_p6;
wire   [7:0] t1_V_9_fu_1686_p2;
wire   [0:0] icmp_ln1065_32_fu_1692_p2;
wire   [0:0] icmp_ln1073_13_fu_1698_p2;
wire   [0:0] icmp_ln1065_33_fu_1710_p2;
wire   [7:0] select_ln929_9_fu_1716_p3;
wire   [0:0] and_ln928_9_fu_1704_p2;
wire   [7:0] sub_ln929_9_fu_1724_p2;
wire   [0:0] icmp_ln1065_34_fu_1738_p2;
wire   [7:0] tmp_203_fu_1752_p6;
wire   [7:0] t1_V_10_fu_1766_p2;
wire   [0:0] icmp_ln1065_35_fu_1772_p2;
wire   [0:0] icmp_ln1073_14_fu_1778_p2;
wire   [0:0] icmp_ln1065_36_fu_1790_p2;
wire   [7:0] select_ln929_10_fu_1796_p3;
wire   [0:0] and_ln928_10_fu_1784_p2;
wire   [7:0] sub_ln929_10_fu_1804_p2;
wire   [0:0] icmp_ln1065_37_fu_1818_p2;
wire   [7:0] tmp_204_fu_1832_p6;
wire   [7:0] t1_V_11_fu_1846_p2;
wire   [0:0] icmp_ln1065_38_fu_1852_p2;
wire   [0:0] icmp_ln1073_15_fu_1858_p2;
wire   [0:0] icmp_ln1065_39_fu_1870_p2;
wire   [7:0] select_ln929_11_fu_1876_p3;
wire   [0:0] and_ln928_11_fu_1864_p2;
wire   [7:0] sub_ln929_11_fu_1884_p2;
wire   [0:0] icmp_ln1065_40_fu_1898_p2;
wire   [7:0] tmp_205_fu_1912_p6;
wire   [7:0] t1_V_12_fu_1926_p2;
wire   [0:0] icmp_ln1065_41_fu_1932_p2;
wire   [0:0] icmp_ln1073_16_fu_1938_p2;
wire   [0:0] icmp_ln1065_42_fu_1950_p2;
wire   [7:0] select_ln929_12_fu_1956_p3;
wire   [0:0] and_ln928_12_fu_1944_p2;
wire   [7:0] sub_ln929_12_fu_1964_p2;
wire   [0:0] icmp_ln1065_43_fu_1978_p2;
wire   [7:0] tmp_206_fu_1992_p6;
wire   [7:0] t1_V_13_fu_2006_p2;
wire   [0:0] icmp_ln1065_44_fu_2012_p2;
wire   [0:0] icmp_ln1073_17_fu_2018_p2;
wire   [0:0] icmp_ln1065_45_fu_2030_p2;
wire   [7:0] select_ln929_13_fu_2036_p3;
wire   [0:0] and_ln928_13_fu_2024_p2;
wire   [7:0] sub_ln929_13_fu_2044_p2;
wire   [0:0] icmp_ln1065_46_fu_2058_p2;
wire   [7:0] tmp_207_fu_2072_p6;
wire   [7:0] t1_V_14_fu_2086_p2;
wire   [0:0] icmp_ln1065_47_fu_2092_p2;
wire   [0:0] icmp_ln1073_18_fu_2098_p2;
wire   [0:0] icmp_ln1065_48_fu_2110_p2;
wire   [7:0] select_ln929_14_fu_2116_p3;
wire   [0:0] and_ln928_14_fu_2104_p2;
wire   [7:0] sub_ln929_14_fu_2124_p2;
wire   [0:0] icmp_ln1065_49_fu_2138_p2;
wire   [7:0] tmp_208_fu_2152_p6;
wire   [7:0] t1_V_15_fu_2166_p2;
wire   [0:0] icmp_ln1065_50_fu_2172_p2;
wire   [0:0] icmp_ln1073_19_fu_2178_p2;
wire   [0:0] and_ln928_15_fu_2184_p2;
wire   [7:0] sub_ln929_15_fu_2190_p2;
wire   [7:0] select_ln850_fu_944_p3;
wire   [7:0] select_ln232_fu_1024_p3;
wire   [7:0] select_ln232_1_fu_1104_p3;
wire   [7:0] select_ln232_2_fu_1184_p3;
wire   [7:0] select_ln232_3_fu_1264_p3;
wire   [7:0] select_ln232_4_fu_1344_p3;
wire   [7:0] select_ln232_5_fu_1424_p3;
wire   [7:0] select_ln232_6_fu_1504_p3;
wire   [7:0] select_ln232_7_fu_1584_p3;
wire   [7:0] select_ln232_8_fu_1664_p3;
wire   [7:0] select_ln232_9_fu_1744_p3;
wire   [7:0] select_ln232_10_fu_1824_p3;
wire   [7:0] select_ln232_11_fu_1904_p3;
wire   [7:0] select_ln232_12_fu_1984_p3;
wire   [7:0] select_ln232_13_fu_2064_p3;
wire   [7:0] select_ln232_14_fu_2144_p3;
wire   [7:0] getWokerList_buffer_V_fu_1010_p3;
wire   [7:0] getWokerList_buffer_V_49_fu_1090_p3;
wire   [7:0] getWokerList_buffer_V_50_fu_1170_p3;
wire   [7:0] getWokerList_buffer_V_51_fu_1250_p3;
wire   [7:0] getWokerList_buffer_V_52_fu_1330_p3;
wire   [7:0] getWokerList_buffer_V_53_fu_1410_p3;
wire   [7:0] getWokerList_buffer_V_54_fu_1490_p3;
wire   [7:0] getWokerList_buffer_V_55_fu_1570_p3;
wire   [7:0] getWokerList_buffer_V_56_fu_1650_p3;
wire   [7:0] getWokerList_buffer_V_57_fu_1730_p3;
wire   [7:0] getWokerList_buffer_V_58_fu_1810_p3;
wire   [7:0] getWokerList_buffer_V_59_fu_1890_p3;
wire   [7:0] getWokerList_buffer_V_60_fu_1970_p3;
wire   [7:0] getWokerList_buffer_V_61_fu_2050_p3;
wire   [7:0] getWokerList_buffer_V_62_fu_2130_p3;
wire   [7:0] getWokerList_buffer_V_63_fu_2196_p3;
wire    ap_ce_reg;

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U1(
    .din0(p_read48),
    .din1(p_read49),
    .din2(p_read50),
    .din3(p_read51),
    .din4(p_read16),
    .dout(tmp_fu_952_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U2(
    .din0(p_read52),
    .din1(p_read53),
    .din2(p_read54),
    .din3(p_read55),
    .din4(p_read17),
    .dout(tmp_s_fu_1032_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U3(
    .din0(p_read56),
    .din1(p_read57),
    .din2(p_read58),
    .din3(p_read59),
    .din4(p_read18),
    .dout(tmp_195_fu_1112_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U4(
    .din0(p_read60),
    .din1(p_read61),
    .din2(p_read62),
    .din3(p_read63),
    .din4(p_read19),
    .dout(tmp_196_fu_1192_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U5(
    .din0(p_read64),
    .din1(p_read65),
    .din2(p_read66),
    .din3(p_read67),
    .din4(p_read20),
    .dout(tmp_197_fu_1272_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U6(
    .din0(p_read68),
    .din1(p_read69),
    .din2(p_read70),
    .din3(p_read71),
    .din4(p_read21),
    .dout(tmp_198_fu_1352_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U7(
    .din0(p_read72),
    .din1(p_read73),
    .din2(p_read74),
    .din3(p_read75),
    .din4(p_read22),
    .dout(tmp_199_fu_1432_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U8(
    .din0(p_read76),
    .din1(p_read77),
    .din2(p_read78),
    .din3(p_read79),
    .din4(p_read23),
    .dout(tmp_200_fu_1512_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U9(
    .din0(p_read80),
    .din1(p_read81),
    .din2(p_read82),
    .din3(p_read83),
    .din4(p_read24),
    .dout(tmp_201_fu_1592_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U10(
    .din0(p_read84),
    .din1(p_read85),
    .din2(p_read86),
    .din3(p_read87),
    .din4(p_read25),
    .dout(tmp_202_fu_1672_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U11(
    .din0(p_read88),
    .din1(p_read89),
    .din2(p_read90),
    .din3(p_read91),
    .din4(p_read26),
    .dout(tmp_203_fu_1752_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U12(
    .din0(p_read92),
    .din1(p_read93),
    .din2(p_read94),
    .din3(p_read95),
    .din4(p_read27),
    .dout(tmp_204_fu_1832_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U13(
    .din0(p_read96),
    .din1(p_read97),
    .din2(p_read98),
    .din3(p_read99),
    .din4(p_read28),
    .dout(tmp_205_fu_1912_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U14(
    .din0(p_read100),
    .din1(p_read101),
    .din2(p_read102),
    .din3(p_read103),
    .din4(p_read29),
    .dout(tmp_206_fu_1992_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U15(
    .din0(p_read104),
    .din1(p_read105),
    .din2(p_read106),
    .din3(p_read107),
    .din4(p_read30),
    .dout(tmp_207_fu_2072_p6)
);

MPCcore_mux_48_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mux_48_8_1_1_U16(
    .din0(p_read108),
    .din1(p_read109),
    .din2(p_read110),
    .din3(p_read111),
    .din4(p_read31),
    .dout(tmp_208_fu_2152_p6)
);

assign and_ln928_10_fu_1784_p2 = (icmp_ln1073_14_fu_1778_p2 & icmp_ln1065_35_fu_1772_p2);

assign and_ln928_11_fu_1864_p2 = (icmp_ln1073_15_fu_1858_p2 & icmp_ln1065_38_fu_1852_p2);

assign and_ln928_12_fu_1944_p2 = (icmp_ln1073_16_fu_1938_p2 & icmp_ln1065_41_fu_1932_p2);

assign and_ln928_13_fu_2024_p2 = (icmp_ln1073_17_fu_2018_p2 & icmp_ln1065_44_fu_2012_p2);

assign and_ln928_14_fu_2104_p2 = (icmp_ln1073_18_fu_2098_p2 & icmp_ln1065_47_fu_2092_p2);

assign and_ln928_15_fu_2184_p2 = (icmp_ln1073_19_fu_2178_p2 & icmp_ln1065_50_fu_2172_p2);

assign and_ln928_1_fu_1064_p2 = (icmp_ln1073_5_fu_1058_p2 & icmp_ln1065_8_fu_1052_p2);

assign and_ln928_2_fu_1144_p2 = (icmp_ln1073_6_fu_1138_p2 & icmp_ln1065_11_fu_1132_p2);

assign and_ln928_3_fu_1224_p2 = (icmp_ln1073_7_fu_1218_p2 & icmp_ln1065_14_fu_1212_p2);

assign and_ln928_4_fu_1304_p2 = (icmp_ln1073_8_fu_1298_p2 & icmp_ln1065_17_fu_1292_p2);

assign and_ln928_5_fu_1384_p2 = (icmp_ln1073_9_fu_1378_p2 & icmp_ln1065_20_fu_1372_p2);

assign and_ln928_6_fu_1464_p2 = (icmp_ln1073_10_fu_1458_p2 & icmp_ln1065_23_fu_1452_p2);

assign and_ln928_7_fu_1544_p2 = (icmp_ln1073_11_fu_1538_p2 & icmp_ln1065_26_fu_1532_p2);

assign and_ln928_8_fu_1624_p2 = (icmp_ln1073_12_fu_1618_p2 & icmp_ln1065_29_fu_1612_p2);

assign and_ln928_9_fu_1704_p2 = (icmp_ln1073_13_fu_1698_p2 & icmp_ln1065_32_fu_1692_p2);

assign and_ln928_fu_984_p2 = (icmp_ln1073_fu_978_p2 & icmp_ln1065_fu_972_p2);

assign ap_ready = 1'b1;

assign ap_return_0 = select_ln850_fu_944_p3;

assign ap_return_1 = select_ln232_fu_1024_p3;

assign ap_return_10 = select_ln232_9_fu_1744_p3;

assign ap_return_11 = select_ln232_10_fu_1824_p3;

assign ap_return_12 = select_ln232_11_fu_1904_p3;

assign ap_return_13 = select_ln232_12_fu_1984_p3;

assign ap_return_14 = select_ln232_13_fu_2064_p3;

assign ap_return_15 = select_ln232_14_fu_2144_p3;

assign ap_return_16 = getWokerList_buffer_V_fu_1010_p3;

assign ap_return_17 = getWokerList_buffer_V_49_fu_1090_p3;

assign ap_return_18 = getWokerList_buffer_V_50_fu_1170_p3;

assign ap_return_19 = getWokerList_buffer_V_51_fu_1250_p3;

assign ap_return_2 = select_ln232_1_fu_1104_p3;

assign ap_return_20 = getWokerList_buffer_V_52_fu_1330_p3;

assign ap_return_21 = getWokerList_buffer_V_53_fu_1410_p3;

assign ap_return_22 = getWokerList_buffer_V_54_fu_1490_p3;

assign ap_return_23 = getWokerList_buffer_V_55_fu_1570_p3;

assign ap_return_24 = getWokerList_buffer_V_56_fu_1650_p3;

assign ap_return_25 = getWokerList_buffer_V_57_fu_1730_p3;

assign ap_return_26 = getWokerList_buffer_V_58_fu_1810_p3;

assign ap_return_27 = getWokerList_buffer_V_59_fu_1890_p3;

assign ap_return_28 = getWokerList_buffer_V_60_fu_1970_p3;

assign ap_return_29 = getWokerList_buffer_V_61_fu_2050_p3;

assign ap_return_3 = select_ln232_2_fu_1184_p3;

assign ap_return_30 = getWokerList_buffer_V_62_fu_2130_p3;

assign ap_return_31 = getWokerList_buffer_V_63_fu_2196_p3;

assign ap_return_4 = select_ln232_3_fu_1264_p3;

assign ap_return_5 = select_ln232_4_fu_1344_p3;

assign ap_return_6 = select_ln232_5_fu_1424_p3;

assign ap_return_7 = select_ln232_6_fu_1504_p3;

assign ap_return_8 = select_ln232_7_fu_1584_p3;

assign ap_return_9 = select_ln232_8_fu_1664_p3;

assign getHelperList_buffer_V_fu_938_p2 = ((p_read != 8'd2) ? 1'b1 : 1'b0);

assign getWokerList_buffer_V_49_fu_1090_p3 = ((and_ln928_1_fu_1064_p2[0:0] == 1'b1) ? sub_ln929_1_fu_1084_p2 : 8'd255);

assign getWokerList_buffer_V_50_fu_1170_p3 = ((and_ln928_2_fu_1144_p2[0:0] == 1'b1) ? sub_ln929_2_fu_1164_p2 : 8'd255);

assign getWokerList_buffer_V_51_fu_1250_p3 = ((and_ln928_3_fu_1224_p2[0:0] == 1'b1) ? sub_ln929_3_fu_1244_p2 : 8'd255);

assign getWokerList_buffer_V_52_fu_1330_p3 = ((and_ln928_4_fu_1304_p2[0:0] == 1'b1) ? sub_ln929_4_fu_1324_p2 : 8'd255);

assign getWokerList_buffer_V_53_fu_1410_p3 = ((and_ln928_5_fu_1384_p2[0:0] == 1'b1) ? sub_ln929_5_fu_1404_p2 : 8'd255);

assign getWokerList_buffer_V_54_fu_1490_p3 = ((and_ln928_6_fu_1464_p2[0:0] == 1'b1) ? sub_ln929_6_fu_1484_p2 : 8'd255);

assign getWokerList_buffer_V_55_fu_1570_p3 = ((and_ln928_7_fu_1544_p2[0:0] == 1'b1) ? sub_ln929_7_fu_1564_p2 : 8'd255);

assign getWokerList_buffer_V_56_fu_1650_p3 = ((and_ln928_8_fu_1624_p2[0:0] == 1'b1) ? sub_ln929_8_fu_1644_p2 : 8'd255);

assign getWokerList_buffer_V_57_fu_1730_p3 = ((and_ln928_9_fu_1704_p2[0:0] == 1'b1) ? sub_ln929_9_fu_1724_p2 : 8'd255);

assign getWokerList_buffer_V_58_fu_1810_p3 = ((and_ln928_10_fu_1784_p2[0:0] == 1'b1) ? sub_ln929_10_fu_1804_p2 : 8'd255);

assign getWokerList_buffer_V_59_fu_1890_p3 = ((and_ln928_11_fu_1864_p2[0:0] == 1'b1) ? sub_ln929_11_fu_1884_p2 : 8'd255);

assign getWokerList_buffer_V_60_fu_1970_p3 = ((and_ln928_12_fu_1944_p2[0:0] == 1'b1) ? sub_ln929_12_fu_1964_p2 : 8'd255);

assign getWokerList_buffer_V_61_fu_2050_p3 = ((and_ln928_13_fu_2024_p2[0:0] == 1'b1) ? sub_ln929_13_fu_2044_p2 : 8'd255);

assign getWokerList_buffer_V_62_fu_2130_p3 = ((and_ln928_14_fu_2104_p2[0:0] == 1'b1) ? sub_ln929_14_fu_2124_p2 : 8'd255);

assign getWokerList_buffer_V_63_fu_2196_p3 = ((and_ln928_15_fu_2184_p2[0:0] == 1'b1) ? sub_ln929_15_fu_2190_p2 : 8'd255);

assign getWokerList_buffer_V_fu_1010_p3 = ((and_ln928_fu_984_p2[0:0] == 1'b1) ? sub_ln929_fu_1004_p2 : 8'd255);

assign icmp_ln1065_10_fu_1098_p2 = ((p_read2 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_11_fu_1132_p2 = ((p_read2 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_12_fu_1150_p2 = ((p_read18 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_13_fu_1178_p2 = ((p_read3 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_14_fu_1212_p2 = ((p_read3 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_15_fu_1230_p2 = ((p_read19 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_16_fu_1258_p2 = ((p_read4 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_17_fu_1292_p2 = ((p_read4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_18_fu_1310_p2 = ((p_read20 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_19_fu_1338_p2 = ((p_read5 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_20_fu_1372_p2 = ((p_read5 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_21_fu_1390_p2 = ((p_read21 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_22_fu_1418_p2 = ((p_read6 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_23_fu_1452_p2 = ((p_read6 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_24_fu_1470_p2 = ((p_read22 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_25_fu_1498_p2 = ((p_read7 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_26_fu_1532_p2 = ((p_read7 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_27_fu_1550_p2 = ((p_read23 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_28_fu_1578_p2 = ((p_read8 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_29_fu_1612_p2 = ((p_read8 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_30_fu_1630_p2 = ((p_read24 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_31_fu_1658_p2 = ((p_read9 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_32_fu_1692_p2 = ((p_read9 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_33_fu_1710_p2 = ((p_read25 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_34_fu_1738_p2 = ((p_read10 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_35_fu_1772_p2 = ((p_read10 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_36_fu_1790_p2 = ((p_read26 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_37_fu_1818_p2 = ((p_read11 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_38_fu_1852_p2 = ((p_read11 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_39_fu_1870_p2 = ((p_read27 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_40_fu_1898_p2 = ((p_read12 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_41_fu_1932_p2 = ((p_read12 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_42_fu_1950_p2 = ((p_read28 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_43_fu_1978_p2 = ((p_read13 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_44_fu_2012_p2 = ((p_read13 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_45_fu_2030_p2 = ((p_read29 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_46_fu_2058_p2 = ((p_read14 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_47_fu_2092_p2 = ((p_read14 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_48_fu_2110_p2 = ((p_read30 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_49_fu_2138_p2 = ((p_read15 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_50_fu_2172_p2 = ((p_read15 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_6_fu_990_p2 = ((p_read16 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_7_fu_1018_p2 = ((p_read1 == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_8_fu_1052_p2 = ((p_read1 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_9_fu_1070_p2 = ((p_read17 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_972_p2 = ((p_read == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1073_10_fu_1458_p2 = (($signed(t1_V_6_fu_1446_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_11_fu_1538_p2 = (($signed(t1_V_7_fu_1526_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_12_fu_1618_p2 = (($signed(t1_V_8_fu_1606_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_13_fu_1698_p2 = (($signed(t1_V_9_fu_1686_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_14_fu_1778_p2 = (($signed(t1_V_10_fu_1766_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_15_fu_1858_p2 = (($signed(t1_V_11_fu_1846_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_16_fu_1938_p2 = (($signed(t1_V_12_fu_1926_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_17_fu_2018_p2 = (($signed(t1_V_13_fu_2006_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_18_fu_2098_p2 = (($signed(t1_V_14_fu_2086_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_19_fu_2178_p2 = (($signed(t1_V_15_fu_2166_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_5_fu_1058_p2 = (($signed(t1_V_1_fu_1046_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_6_fu_1138_p2 = (($signed(t1_V_2_fu_1126_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_7_fu_1218_p2 = (($signed(t1_V_3_fu_1206_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_8_fu_1298_p2 = (($signed(t1_V_4_fu_1286_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_9_fu_1378_p2 = (($signed(t1_V_5_fu_1366_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign icmp_ln1073_fu_978_p2 = (($signed(t1_V_fu_966_p2) < $signed(8'd26)) ? 1'b1 : 1'b0);

assign select_ln232_10_fu_1824_p3 = ((icmp_ln1065_37_fu_1818_p2[0:0] == 1'b1) ? 8'd11 : 8'd255);

assign select_ln232_11_fu_1904_p3 = ((icmp_ln1065_40_fu_1898_p2[0:0] == 1'b1) ? 8'd12 : 8'd255);

assign select_ln232_12_fu_1984_p3 = ((icmp_ln1065_43_fu_1978_p2[0:0] == 1'b1) ? 8'd13 : 8'd255);

assign select_ln232_13_fu_2064_p3 = ((icmp_ln1065_46_fu_2058_p2[0:0] == 1'b1) ? 8'd14 : 8'd255);

assign select_ln232_14_fu_2144_p3 = ((icmp_ln1065_49_fu_2138_p2[0:0] == 1'b1) ? 8'd15 : 8'd255);

assign select_ln232_1_fu_1104_p3 = ((icmp_ln1065_10_fu_1098_p2[0:0] == 1'b1) ? 8'd2 : 8'd255);

assign select_ln232_2_fu_1184_p3 = ((icmp_ln1065_13_fu_1178_p2[0:0] == 1'b1) ? 8'd3 : 8'd255);

assign select_ln232_3_fu_1264_p3 = ((icmp_ln1065_16_fu_1258_p2[0:0] == 1'b1) ? 8'd4 : 8'd255);

assign select_ln232_4_fu_1344_p3 = ((icmp_ln1065_19_fu_1338_p2[0:0] == 1'b1) ? 8'd5 : 8'd255);

assign select_ln232_5_fu_1424_p3 = ((icmp_ln1065_22_fu_1418_p2[0:0] == 1'b1) ? 8'd6 : 8'd255);

assign select_ln232_6_fu_1504_p3 = ((icmp_ln1065_25_fu_1498_p2[0:0] == 1'b1) ? 8'd7 : 8'd255);

assign select_ln232_7_fu_1584_p3 = ((icmp_ln1065_28_fu_1578_p2[0:0] == 1'b1) ? 8'd8 : 8'd255);

assign select_ln232_8_fu_1664_p3 = ((icmp_ln1065_31_fu_1658_p2[0:0] == 1'b1) ? 8'd9 : 8'd255);

assign select_ln232_9_fu_1744_p3 = ((icmp_ln1065_34_fu_1738_p2[0:0] == 1'b1) ? 8'd10 : 8'd255);

assign select_ln232_fu_1024_p3 = ((icmp_ln1065_7_fu_1018_p2[0:0] == 1'b1) ? 8'd1 : 8'd255);

assign select_ln850_fu_944_p3 = ((getHelperList_buffer_V_fu_938_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln929_10_fu_1796_p3 = ((icmp_ln1065_36_fu_1790_p2[0:0] == 1'b1) ? 8'd10 : 8'd26);

assign select_ln929_11_fu_1876_p3 = ((icmp_ln1065_39_fu_1870_p2[0:0] == 1'b1) ? 8'd11 : 8'd26);

assign select_ln929_12_fu_1956_p3 = ((icmp_ln1065_42_fu_1950_p2[0:0] == 1'b1) ? 8'd12 : 8'd26);

assign select_ln929_13_fu_2036_p3 = ((icmp_ln1065_45_fu_2030_p2[0:0] == 1'b1) ? 8'd13 : 8'd26);

assign select_ln929_14_fu_2116_p3 = ((icmp_ln1065_48_fu_2110_p2[0:0] == 1'b1) ? 8'd14 : 8'd26);

assign select_ln929_1_fu_1076_p3 = ((icmp_ln1065_9_fu_1070_p2[0:0] == 1'b1) ? 8'd1 : 8'd26);

assign select_ln929_2_fu_1156_p3 = ((icmp_ln1065_12_fu_1150_p2[0:0] == 1'b1) ? 8'd2 : 8'd26);

assign select_ln929_3_fu_1236_p3 = ((icmp_ln1065_15_fu_1230_p2[0:0] == 1'b1) ? 8'd3 : 8'd26);

assign select_ln929_4_fu_1316_p3 = ((icmp_ln1065_18_fu_1310_p2[0:0] == 1'b1) ? 8'd4 : 8'd26);

assign select_ln929_5_fu_1396_p3 = ((icmp_ln1065_21_fu_1390_p2[0:0] == 1'b1) ? 8'd5 : 8'd26);

assign select_ln929_6_fu_1476_p3 = ((icmp_ln1065_24_fu_1470_p2[0:0] == 1'b1) ? 8'd6 : 8'd26);

assign select_ln929_7_fu_1556_p3 = ((icmp_ln1065_27_fu_1550_p2[0:0] == 1'b1) ? 8'd7 : 8'd26);

assign select_ln929_8_fu_1636_p3 = ((icmp_ln1065_30_fu_1630_p2[0:0] == 1'b1) ? 8'd8 : 8'd26);

assign select_ln929_9_fu_1716_p3 = ((icmp_ln1065_33_fu_1710_p2[0:0] == 1'b1) ? 8'd9 : 8'd26);

assign select_ln929_fu_996_p3 = ((icmp_ln1065_6_fu_990_p2[0:0] == 1'b1) ? 8'd0 : 8'd26);

assign sub_ln929_10_fu_1804_p2 = (select_ln929_10_fu_1796_p3 - t1_V_10_fu_1766_p2);

assign sub_ln929_11_fu_1884_p2 = (select_ln929_11_fu_1876_p3 - t1_V_11_fu_1846_p2);

assign sub_ln929_12_fu_1964_p2 = (select_ln929_12_fu_1956_p3 - t1_V_12_fu_1926_p2);

assign sub_ln929_13_fu_2044_p2 = (select_ln929_13_fu_2036_p3 - t1_V_13_fu_2006_p2);

assign sub_ln929_14_fu_2124_p2 = (select_ln929_14_fu_2116_p3 - t1_V_14_fu_2086_p2);

assign sub_ln929_15_fu_2190_p2 = (8'd26 - t1_V_15_fu_2166_p2);

assign sub_ln929_1_fu_1084_p2 = (select_ln929_1_fu_1076_p3 - t1_V_1_fu_1046_p2);

assign sub_ln929_2_fu_1164_p2 = (select_ln929_2_fu_1156_p3 - t1_V_2_fu_1126_p2);

assign sub_ln929_3_fu_1244_p2 = (select_ln929_3_fu_1236_p3 - t1_V_3_fu_1206_p2);

assign sub_ln929_4_fu_1324_p2 = (select_ln929_4_fu_1316_p3 - t1_V_4_fu_1286_p2);

assign sub_ln929_5_fu_1404_p2 = (select_ln929_5_fu_1396_p3 - t1_V_5_fu_1366_p2);

assign sub_ln929_6_fu_1484_p2 = (select_ln929_6_fu_1476_p3 - t1_V_6_fu_1446_p2);

assign sub_ln929_7_fu_1564_p2 = (select_ln929_7_fu_1556_p3 - t1_V_7_fu_1526_p2);

assign sub_ln929_8_fu_1644_p2 = (select_ln929_8_fu_1636_p3 - t1_V_8_fu_1606_p2);

assign sub_ln929_9_fu_1724_p2 = (select_ln929_9_fu_1716_p3 - t1_V_9_fu_1686_p2);

assign sub_ln929_fu_1004_p2 = (select_ln929_fu_996_p3 - t1_V_fu_966_p2);

assign t1_V_10_fu_1766_p2 = (tmp_203_fu_1752_p6 + p_read42);

assign t1_V_11_fu_1846_p2 = (tmp_204_fu_1832_p6 + p_read43);

assign t1_V_12_fu_1926_p2 = (tmp_205_fu_1912_p6 + p_read44);

assign t1_V_13_fu_2006_p2 = (tmp_206_fu_1992_p6 + p_read45);

assign t1_V_14_fu_2086_p2 = (tmp_207_fu_2072_p6 + p_read46);

assign t1_V_15_fu_2166_p2 = (tmp_208_fu_2152_p6 + p_read47);

assign t1_V_1_fu_1046_p2 = (tmp_s_fu_1032_p6 + p_read33);

assign t1_V_2_fu_1126_p2 = (tmp_195_fu_1112_p6 + p_read34);

assign t1_V_3_fu_1206_p2 = (tmp_196_fu_1192_p6 + p_read35);

assign t1_V_4_fu_1286_p2 = (tmp_197_fu_1272_p6 + p_read36);

assign t1_V_5_fu_1366_p2 = (tmp_198_fu_1352_p6 + p_read37);

assign t1_V_6_fu_1446_p2 = (tmp_199_fu_1432_p6 + p_read38);

assign t1_V_7_fu_1526_p2 = (tmp_200_fu_1512_p6 + p_read39);

assign t1_V_8_fu_1606_p2 = (tmp_201_fu_1592_p6 + p_read40);

assign t1_V_9_fu_1686_p2 = (tmp_202_fu_1672_p6 + p_read41);

assign t1_V_fu_966_p2 = (tmp_fu_952_p6 + p_read32);

endmodule //MPCcore_MPCallocate_0627
