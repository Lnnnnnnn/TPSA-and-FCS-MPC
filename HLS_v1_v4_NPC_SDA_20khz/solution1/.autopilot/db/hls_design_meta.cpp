#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("y", 8, hls_out, 0, "ap_vld", "out_data", 1),
	Port_Property("y_ap_vld", 1, hls_out, 0, "ap_vld", "out_vld", 1),
	Port_Property("Jin", 32, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("J", 32, hls_out, 2, "ap_vld", "out_data", 1),
	Port_Property("J_ap_vld", 1, hls_out, 2, "ap_vld", "out_vld", 1),
	Port_Property("Calc", 16, hls_out, 3, "ap_vld", "out_data", 1),
	Port_Property("Calc_ap_vld", 1, hls_out, 3, "ap_vld", "out_vld", 1),
	Port_Property("allocationCal", 8, hls_out, 4, "ap_vld", "out_data", 1),
	Port_Property("allocationCal_ap_vld", 1, hls_out, 4, "ap_vld", "out_vld", 1),
	Port_Property("xref_0", 16, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("xref_1", 16, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("xref_2", 16, hls_in, 7, "ap_none", "in_data", 1),
	Port_Property("xref_3", 16, hls_in, 8, "ap_none", "in_data", 1),
	Port_Property("xref_4", 16, hls_in, 9, "ap_none", "in_data", 1),
	Port_Property("xref_5", 16, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("x_0", 16, hls_in, 11, "ap_none", "in_data", 1),
	Port_Property("x_1", 16, hls_in, 12, "ap_none", "in_data", 1),
	Port_Property("x_2", 16, hls_in, 13, "ap_none", "in_data", 1),
	Port_Property("x_3", 16, hls_in, 14, "ap_none", "in_data", 1),
	Port_Property("x_4", 16, hls_in, 15, "ap_none", "in_data", 1),
	Port_Property("x_5", 16, hls_in, 16, "ap_none", "in_data", 1),
	Port_Property("gateT_0", 3, hls_out, 17, "ap_vld", "out_data", 1),
	Port_Property("gateT_0_ap_vld", 1, hls_out, 17, "ap_vld", "out_vld", 1),
	Port_Property("gateT_1", 3, hls_out, 18, "ap_vld", "out_data", 1),
	Port_Property("gateT_1_ap_vld", 1, hls_out, 18, "ap_vld", "out_vld", 1),
	Port_Property("gateT_2", 3, hls_out, 19, "ap_vld", "out_data", 1),
	Port_Property("gateT_2_ap_vld", 1, hls_out, 19, "ap_vld", "out_vld", 1),
	Port_Property("gate_0", 1, hls_out, 20, "ap_vld", "out_data", 1),
	Port_Property("gate_0_ap_vld", 1, hls_out, 20, "ap_vld", "out_vld", 1),
	Port_Property("gate_1", 1, hls_out, 21, "ap_vld", "out_data", 1),
	Port_Property("gate_1_ap_vld", 1, hls_out, 21, "ap_vld", "out_vld", 1),
	Port_Property("gate_2", 1, hls_out, 22, "ap_vld", "out_data", 1),
	Port_Property("gate_2_ap_vld", 1, hls_out, 22, "ap_vld", "out_vld", 1),
	Port_Property("gate_3", 1, hls_out, 23, "ap_vld", "out_data", 1),
	Port_Property("gate_3_ap_vld", 1, hls_out, 23, "ap_vld", "out_vld", 1),
	Port_Property("gate_4", 1, hls_out, 24, "ap_vld", "out_data", 1),
	Port_Property("gate_4_ap_vld", 1, hls_out, 24, "ap_vld", "out_vld", 1),
	Port_Property("gate_5", 1, hls_out, 25, "ap_vld", "out_data", 1),
	Port_Property("gate_5_ap_vld", 1, hls_out, 25, "ap_vld", "out_vld", 1),
	Port_Property("v_0", 16, hls_in, 26, "ap_none", "in_data", 1),
	Port_Property("v_1", 16, hls_in, 27, "ap_none", "in_data", 1),
	Port_Property("prestate_0", 3, hls_in, 28, "ap_none", "in_data", 1),
	Port_Property("prestate_1", 3, hls_in, 29, "ap_none", "in_data", 1),
	Port_Property("prestate_2", 3, hls_in, 30, "ap_none", "in_data", 1),
	Port_Property("Q_quad", 4, hls_in, 31, "ap_none", "in_data", 1),
	Port_Property("Q_quad_mos", 8, hls_in, 32, "ap_none", "in_data", 1),
	Port_Property("Q_switchConst_IGBT", 10, hls_in, 33, "ap_none", "in_data", 1),
	Port_Property("Q_switchConst_MOS", 8, hls_in, 34, "ap_none", "in_data", 1),
	Port_Property("Q_currentlim", 16, hls_in, 35, "ap_none", "in_data", 1),
	Port_Property("ap_ce", 1, hls_in, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "MPCcore";
