-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPCcore_ThreadPE_Pipeline_TFLOOP3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    location_0_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    location_1_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    location_2_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    location_3_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    location_4_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    location_5_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    location_6_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    location_7_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    location_8_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    branch_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read32 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read33 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read34 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read35 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read36 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read37 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read38 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read39 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read40 : IN STD_LOGIC_VECTOR (7 downto 0);
    index_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    write_flag21_0 : IN STD_LOGIC_VECTOR (0 downto 0);
    empty : IN STD_LOGIC_VECTOR (31 downto 0);
    assignmentbegintemp_V : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read23 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read24 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read25 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read26 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read27 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read28 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read29 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read30 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read31 : IN STD_LOGIC_VECTOR (31 downto 0);
    location_0_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_0_2_out_ap_vld : OUT STD_LOGIC;
    location_1_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_1_2_out_ap_vld : OUT STD_LOGIC;
    location_2_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_2_2_out_ap_vld : OUT STD_LOGIC;
    location_3_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_3_2_out_ap_vld : OUT STD_LOGIC;
    location_4_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_4_2_out_ap_vld : OUT STD_LOGIC;
    location_5_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_5_2_out_ap_vld : OUT STD_LOGIC;
    location_6_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_6_2_out_ap_vld : OUT STD_LOGIC;
    location_7_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_7_2_out_ap_vld : OUT STD_LOGIC;
    location_8_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_8_2_out_ap_vld : OUT STD_LOGIC;
    lhs_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    lhs_2_out_ap_vld : OUT STD_LOGIC;
    helpedList_0_0_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_0_0_out_ap_vld : OUT STD_LOGIC;
    helpedList_1_0_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_1_0_out_ap_vld : OUT STD_LOGIC;
    helpedList_2_0_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_2_0_out_ap_vld : OUT STD_LOGIC;
    helpedList_3_0_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_3_0_out_ap_vld : OUT STD_LOGIC;
    helpedList_4_0_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_4_0_out_ap_vld : OUT STD_LOGIC;
    helpedList_5_0_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_5_0_out_ap_vld : OUT STD_LOGIC;
    helpedList_6_0_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_6_0_out_ap_vld : OUT STD_LOGIC;
    helpedList_7_0_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_7_0_out_ap_vld : OUT STD_LOGIC;
    helpedList_8_0_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_8_0_out_ap_vld : OUT STD_LOGIC;
    index_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    index_1_out_ap_vld : OUT STD_LOGIC;
    write_flag21_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    write_flag21_1_out_ap_vld : OUT STD_LOGIC;
    J_current_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    J_current_1_out_ap_vld : OUT STD_LOGIC;
    rhs_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    rhs_1_out_ap_vld : OUT STD_LOGIC;
    trunc_ln5_out : OUT STD_LOGIC_VECTOR (3 downto 0);
    trunc_ln5_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of MPCcore_ThreadPE_Pipeline_TFLOOP3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv9_19 : STD_LOGIC_VECTOR (8 downto 0) := "000011001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal and_ln52_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal write_flag21_1_reg_612 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal and_ln52_reg_1271 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln75_fu_948_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln75_reg_1278 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal J_current_1_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln859_fu_942_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_1_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_285_fu_991_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_lhs_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_8_0_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln70_fu_829_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal helpedList_7_0_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_6_0_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_5_0_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_4_0_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_3_0_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_2_0_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_1_0_fu_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_0_0_fu_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_8_2_fu_216 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_7_2_fu_220 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_6_2_fu_224 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_5_2_fu_228 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_4_2_fu_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_3_2_fu_236 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_2_2_fu_240 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_1_2_fu_244 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_0_2_fu_248 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal rhs_fu_777_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln232_fu_773_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln232_1_fu_802_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln232_fu_773_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_806_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1077_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1081_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_927_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_143 : BOOLEAN;
    signal ap_condition_518 : BOOLEAN;
    signal ap_condition_522 : BOOLEAN;
    signal ap_condition_526 : BOOLEAN;
    signal ap_condition_530 : BOOLEAN;
    signal ap_condition_534 : BOOLEAN;
    signal ap_condition_538 : BOOLEAN;
    signal ap_condition_542 : BOOLEAN;
    signal ap_condition_546 : BOOLEAN;
    signal ap_condition_557 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component MPCcore_mux_98_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component MPCcore_mux_98_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPCcore_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_98_8_1_1_U1888 : component MPCcore_mux_98_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => helpedList_0_0_fu_212,
        din1 => helpedList_1_0_fu_208,
        din2 => helpedList_2_0_fu_204,
        din3 => helpedList_3_0_fu_200,
        din4 => helpedList_4_0_fu_196,
        din5 => helpedList_5_0_fu_192,
        din6 => helpedList_6_0_fu_188,
        din7 => helpedList_7_0_fu_184,
        din8 => helpedList_8_0_fu_180,
        din9 => index_1_fu_172,
        dout => rhs_fu_777_p11);

    mux_98_32_1_1_U1889 : component MPCcore_mux_98_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        din0 => p_read23,
        din1 => p_read24,
        din2 => p_read25,
        din3 => p_read26,
        din4 => p_read27,
        din5 => p_read28,
        din6 => p_read29,
        din7 => p_read30,
        din8 => p_read31,
        din9 => index_1_fu_172,
        dout => tmp_s_fu_927_p11);

    mux_98_8_1_1_U1890 : component MPCcore_mux_98_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => location_0_2_fu_248,
        din1 => location_1_2_fu_244,
        din2 => location_2_2_fu_240,
        din3 => location_3_2_fu_236,
        din4 => location_4_2_fu_232,
        din5 => location_5_2_fu_228,
        din6 => location_6_2_fu_224,
        din7 => location_7_2_fu_220,
        din8 => location_8_2_fu_216,
        din9 => add_ln75_reg_1278,
        dout => tmp_285_fu_991_p11);

    flow_control_loop_pipe_sequential_init_U : component MPCcore_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                if ((ap_const_logic_1 = ap_ce)) then 
                    ap_CS_fsm <= ap_NS_fsm;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    J_current_1_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    J_current_1_fu_168 <= empty;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_fu_823_p2))) then 
                    J_current_1_fu_168 <= sub_ln859_fu_942_p2;
                end if;
            end if; 
        end if;
    end process;

    helpedList_0_0_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_0_0_fu_212 <= p_read32;
                elsif ((ap_const_boolean_1 = ap_condition_518)) then 
                    helpedList_0_0_fu_212 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_1_0_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_1_0_fu_208 <= p_read33;
                elsif ((ap_const_boolean_1 = ap_condition_522)) then 
                    helpedList_1_0_fu_208 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_2_0_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_2_0_fu_204 <= p_read34;
                elsif ((ap_const_boolean_1 = ap_condition_526)) then 
                    helpedList_2_0_fu_204 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_3_0_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_3_0_fu_200 <= p_read35;
                elsif ((ap_const_boolean_1 = ap_condition_530)) then 
                    helpedList_3_0_fu_200 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_4_0_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_4_0_fu_196 <= p_read36;
                elsif ((ap_const_boolean_1 = ap_condition_534)) then 
                    helpedList_4_0_fu_196 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_5_0_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_5_0_fu_192 <= p_read37;
                elsif ((ap_const_boolean_1 = ap_condition_538)) then 
                    helpedList_5_0_fu_192 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_6_0_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_6_0_fu_188 <= p_read38;
                elsif ((ap_const_boolean_1 = ap_condition_542)) then 
                    helpedList_6_0_fu_188 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_7_0_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_7_0_fu_184 <= p_read39;
                elsif ((ap_const_boolean_1 = ap_condition_546)) then 
                    helpedList_7_0_fu_184 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_8_0_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_8_0_fu_180 <= p_read40;
                elsif ((ap_const_boolean_1 = ap_condition_557)) then 
                    helpedList_8_0_fu_180 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    index_1_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    index_1_fu_172 <= index_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_fu_823_p2))) then 
                    index_1_fu_172 <= add_ln75_fu_948_p2;
                end if;
            end if; 
        end if;
    end process;

    lhs_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    lhs_fu_176 <= branch_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_reg_1271))) then 
                    lhs_fu_176 <= tmp_285_fu_991_p11;
                end if;
            end if; 
        end if;
    end process;

    location_0_2_fu_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_0_2_fu_248 <= location_0_0;
                elsif ((ap_const_boolean_1 = ap_condition_518)) then 
                    location_0_2_fu_248 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_1_2_fu_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_1_2_fu_244 <= location_1_0;
                elsif ((ap_const_boolean_1 = ap_condition_522)) then 
                    location_1_2_fu_244 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_2_2_fu_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_2_2_fu_240 <= location_2_0;
                elsif ((ap_const_boolean_1 = ap_condition_526)) then 
                    location_2_2_fu_240 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_3_2_fu_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_3_2_fu_236 <= location_3_0;
                elsif ((ap_const_boolean_1 = ap_condition_530)) then 
                    location_3_2_fu_236 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_4_2_fu_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_4_2_fu_232 <= location_4_0;
                elsif ((ap_const_boolean_1 = ap_condition_534)) then 
                    location_4_2_fu_232 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_5_2_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_5_2_fu_228 <= location_5_0;
                elsif ((ap_const_boolean_1 = ap_condition_538)) then 
                    location_5_2_fu_228 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_6_2_fu_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_6_2_fu_224 <= location_6_0;
                elsif ((ap_const_boolean_1 = ap_condition_542)) then 
                    location_6_2_fu_224 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_7_2_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_7_2_fu_220 <= location_7_0;
                elsif ((ap_const_boolean_1 = ap_condition_546)) then 
                    location_7_2_fu_220 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_8_2_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_143)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_8_2_fu_216 <= location_8_0;
                elsif ((ap_const_boolean_1 = ap_condition_557)) then 
                    location_8_2_fu_216 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    write_flag21_1_reg_612_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                write_flag21_1_reg_612 <= write_flag21_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln52_reg_1271))) then 
                write_flag21_1_reg_612 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln52_fu_823_p2))) then
                add_ln75_reg_1278 <= add_ln75_fu_948_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln52_reg_1271 <= and_ln52_fu_823_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    J_current_1_out <= J_current_1_fu_168;

    J_current_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            J_current_1_out_ap_vld <= ap_const_logic_1;
        else 
            J_current_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln75_fu_948_p2 <= std_logic_vector(unsigned(index_1_fu_172) + unsigned(ap_const_lv8_FF));
    and_ln52_fu_823_p2 <= (icmp_ln1081_fu_818_p2 and icmp_ln1077_fu_812_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_143_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
                ap_condition_143 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_518_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln52_fu_823_p2, trunc_ln70_fu_829_p1)
    begin
                ap_condition_518 <= ((trunc_ln70_fu_829_p1 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_fu_823_p2));
    end process;


    ap_condition_522_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln52_fu_823_p2, trunc_ln70_fu_829_p1)
    begin
                ap_condition_522 <= ((trunc_ln70_fu_829_p1 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_fu_823_p2));
    end process;


    ap_condition_526_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln52_fu_823_p2, trunc_ln70_fu_829_p1)
    begin
                ap_condition_526 <= ((trunc_ln70_fu_829_p1 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_fu_823_p2));
    end process;


    ap_condition_530_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln52_fu_823_p2, trunc_ln70_fu_829_p1)
    begin
                ap_condition_530 <= ((trunc_ln70_fu_829_p1 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_fu_823_p2));
    end process;


    ap_condition_534_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln52_fu_823_p2, trunc_ln70_fu_829_p1)
    begin
                ap_condition_534 <= ((trunc_ln70_fu_829_p1 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_fu_823_p2));
    end process;


    ap_condition_538_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln52_fu_823_p2, trunc_ln70_fu_829_p1)
    begin
                ap_condition_538 <= ((trunc_ln70_fu_829_p1 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_fu_823_p2));
    end process;


    ap_condition_542_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln52_fu_823_p2, trunc_ln70_fu_829_p1)
    begin
                ap_condition_542 <= ((trunc_ln70_fu_829_p1 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_fu_823_p2));
    end process;


    ap_condition_546_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln52_fu_823_p2, trunc_ln70_fu_829_p1)
    begin
                ap_condition_546 <= ((trunc_ln70_fu_829_p1 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_fu_823_p2));
    end process;


    ap_condition_557_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln52_fu_823_p2, trunc_ln70_fu_829_p1)
    begin
                ap_condition_557 <= (not((trunc_ln70_fu_829_p1 = ap_const_lv4_7)) and not((trunc_ln70_fu_829_p1 = ap_const_lv4_6)) and not((trunc_ln70_fu_829_p1 = ap_const_lv4_5)) and not((trunc_ln70_fu_829_p1 = ap_const_lv4_4)) and not((trunc_ln70_fu_829_p1 = ap_const_lv4_3)) and not((trunc_ln70_fu_829_p1 = ap_const_lv4_2)) and not((trunc_ln70_fu_829_p1 = ap_const_lv4_1)) and not((trunc_ln70_fu_829_p1 = ap_const_lv4_0)) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_fu_823_p2));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, and_ln52_fu_823_p2)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_lhs_1_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln52_reg_1271, ap_block_pp0_stage0, lhs_fu_176, tmp_285_fu_991_p11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln52_reg_1271))) then 
            ap_sig_allocacmp_lhs_1 <= tmp_285_fu_991_p11;
        else 
            ap_sig_allocacmp_lhs_1 <= lhs_fu_176;
        end if; 
    end process;

    helpedList_0_0_out <= helpedList_0_0_fu_212;

    helpedList_0_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_0_0_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_0_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_1_0_out <= helpedList_1_0_fu_208;

    helpedList_1_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_1_0_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_1_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_2_0_out <= helpedList_2_0_fu_204;

    helpedList_2_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_2_0_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_2_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_3_0_out <= helpedList_3_0_fu_200;

    helpedList_3_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_3_0_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_3_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_4_0_out <= helpedList_4_0_fu_196;

    helpedList_4_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_4_0_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_4_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_5_0_out <= helpedList_5_0_fu_192;

    helpedList_5_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_5_0_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_5_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_6_0_out <= helpedList_6_0_fu_188;

    helpedList_6_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_6_0_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_6_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_7_0_out <= helpedList_7_0_fu_184;

    helpedList_7_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_7_0_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_7_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_8_0_out <= helpedList_8_0_fu_180;

    helpedList_8_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_8_0_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_8_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1077_fu_812_p2 <= "1" when (signed(ret_V_fu_806_p2) > signed(ap_const_lv9_19)) else "0";
    icmp_ln1081_fu_818_p2 <= "1" when (signed(index_1_fu_172) > signed(assignmentbegintemp_V)) else "0";
    index_1_out <= index_1_fu_172;

    index_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            index_1_out_ap_vld <= ap_const_logic_1;
        else 
            index_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lhs_2_out <= lhs_fu_176;

    lhs_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lhs_2_out_ap_vld <= ap_const_logic_1;
        else 
            lhs_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_0_2_out <= location_0_2_fu_248;

    location_0_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_0_2_out_ap_vld <= ap_const_logic_1;
        else 
            location_0_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_1_2_out <= location_1_2_fu_244;

    location_1_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_1_2_out_ap_vld <= ap_const_logic_1;
        else 
            location_1_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_2_2_out <= location_2_2_fu_240;

    location_2_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_2_2_out_ap_vld <= ap_const_logic_1;
        else 
            location_2_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_3_2_out <= location_3_2_fu_236;

    location_3_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_3_2_out_ap_vld <= ap_const_logic_1;
        else 
            location_3_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_4_2_out <= location_4_2_fu_232;

    location_4_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_4_2_out_ap_vld <= ap_const_logic_1;
        else 
            location_4_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_5_2_out <= location_5_2_fu_228;

    location_5_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_5_2_out_ap_vld <= ap_const_logic_1;
        else 
            location_5_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_6_2_out <= location_6_2_fu_224;

    location_6_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_6_2_out_ap_vld <= ap_const_logic_1;
        else 
            location_6_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_7_2_out <= location_7_2_fu_220;

    location_7_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_7_2_out_ap_vld <= ap_const_logic_1;
        else 
            location_7_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_8_2_out <= location_8_2_fu_216;

    location_8_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_8_2_out_ap_vld <= ap_const_logic_1;
        else 
            location_8_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_806_p2 <= std_logic_vector(signed(sext_ln232_1_fu_802_p1) + signed(sext_ln232_fu_773_p1));
    rhs_1_out <= rhs_fu_777_p11;

    rhs_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rhs_1_out_ap_vld <= ap_const_logic_1;
        else 
            rhs_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln232_1_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_fu_777_p11),9));

    sext_ln232_fu_773_p0 <= ap_sig_allocacmp_lhs_1;
        sext_ln232_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln232_fu_773_p0),9));

    sub_ln859_fu_942_p2 <= std_logic_vector(unsigned(J_current_1_fu_168) - unsigned(tmp_s_fu_927_p11));
    trunc_ln5_out <= index_1_fu_172(4 - 1 downto 0);

    trunc_ln5_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trunc_ln5_out_ap_vld <= ap_const_logic_1;
        else 
            trunc_ln5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln70_fu_829_p1 <= index_1_fu_172(4 - 1 downto 0);
    write_flag21_1_out <= write_flag21_1_reg_612;

    write_flag21_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln52_fu_823_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln52_fu_823_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            write_flag21_1_out_ap_vld <= ap_const_logic_1;
        else 
            write_flag21_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
