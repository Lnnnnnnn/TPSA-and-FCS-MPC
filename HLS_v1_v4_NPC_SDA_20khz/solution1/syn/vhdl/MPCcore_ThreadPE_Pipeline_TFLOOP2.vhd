-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPCcore_ThreadPE_Pipeline_TFLOOP2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    p_read11 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read16 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read17 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read18 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read19 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read32 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read33 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read34 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read35 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read36 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read37 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read38 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read39 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read40 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv3_i752 : IN STD_LOGIC_VECTOR (7 downto 0);
    select_ln170 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln170_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln170_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln170_3 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln170_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln170_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln170_6 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln170_7 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln170_8 : IN STD_LOGIC_VECTOR (31 downto 0);
    location_0_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_0_6_out_ap_vld : OUT STD_LOGIC;
    location_1_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_1_6_out_ap_vld : OUT STD_LOGIC;
    location_2_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_2_6_out_ap_vld : OUT STD_LOGIC;
    location_3_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_3_6_out_ap_vld : OUT STD_LOGIC;
    location_4_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_4_6_out_ap_vld : OUT STD_LOGIC;
    location_5_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_5_6_out_ap_vld : OUT STD_LOGIC;
    location_6_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_6_6_out_ap_vld : OUT STD_LOGIC;
    location_7_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_7_6_out_ap_vld : OUT STD_LOGIC;
    location_8_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    location_8_6_out_ap_vld : OUT STD_LOGIC;
    helpedList_0_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_0_4_out_ap_vld : OUT STD_LOGIC;
    helpedList_1_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_1_4_out_ap_vld : OUT STD_LOGIC;
    helpedList_2_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_2_4_out_ap_vld : OUT STD_LOGIC;
    helpedList_3_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_3_4_out_ap_vld : OUT STD_LOGIC;
    helpedList_4_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_4_4_out_ap_vld : OUT STD_LOGIC;
    helpedList_5_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_5_4_out_ap_vld : OUT STD_LOGIC;
    helpedList_6_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_6_4_out_ap_vld : OUT STD_LOGIC;
    helpedList_7_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_7_4_out_ap_vld : OUT STD_LOGIC;
    helpedList_8_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    helpedList_8_4_out_ap_vld : OUT STD_LOGIC;
    index_3_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    index_3_out_ap_vld : OUT STD_LOGIC;
    lhs_V_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    lhs_V_out_ap_vld : OUT STD_LOGIC;
    mux_case_03022_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    mux_case_03022_out_ap_vld : OUT STD_LOGIC;
    p_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out_ap_vld : OUT STD_LOGIC;
    rhs_V_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    rhs_V_out_ap_vld : OUT STD_LOGIC;
    trunc_ln7_out : OUT STD_LOGIC_VECTOR (3 downto 0);
    trunc_ln7_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of MPCcore_ThreadPE_Pipeline_TFLOOP2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv9_19 : STD_LOGIC_VECTOR (8 downto 0) := "000011001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal and_ln159_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal conv3_i752_cast_fu_638_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_i752_cast_reg_1510 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln75_fu_1065_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln75_reg_1521 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln859_fu_1059_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal indvars_iv219_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln75_18_fu_1071_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_286_fu_1119_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_lhs_V_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_3_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal mux_case_070_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln172_fu_896_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mux_case_172_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal mux_case_274_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal mux_case_376_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal mux_case_478_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal mux_case_580_fu_198 : STD_LOGIC_VECTOR (7 downto 0);
    signal mux_case_682_fu_202 : STD_LOGIC_VECTOR (7 downto 0);
    signal mux_case_784_fu_206 : STD_LOGIC_VECTOR (7 downto 0);
    signal mux_case_886_fu_210 : STD_LOGIC_VECTOR (7 downto 0);
    signal mux_case_03022_fu_214 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_8_4_fu_218 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_7_4_fu_222 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_6_4_fu_226 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_5_4_fu_230 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_4_4_fu_234 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_3_4_fu_238 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_2_4_fu_242 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_1_4_fu_246 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_0_4_fu_250 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_8_6_fu_254 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_7_6_fu_258 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_6_6_fu_262 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_5_6_fu_266 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_4_6_fu_270 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_3_6_fu_274 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_2_6_fu_278 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_1_6_fu_282 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_0_6_fu_286 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal rhs_V_fu_844_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln232_fu_836_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln232_fu_840_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln232_2_fu_869_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln232_fu_836_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_873_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1077_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1081_fu_885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1044_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_139 : BOOLEAN;
    signal ap_condition_562 : BOOLEAN;
    signal ap_condition_566 : BOOLEAN;
    signal ap_condition_570 : BOOLEAN;
    signal ap_condition_574 : BOOLEAN;
    signal ap_condition_578 : BOOLEAN;
    signal ap_condition_582 : BOOLEAN;
    signal ap_condition_586 : BOOLEAN;
    signal ap_condition_590 : BOOLEAN;
    signal ap_condition_601 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component MPCcore_mux_98_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component MPCcore_mux_98_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPCcore_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_98_8_1_1_U1948 : component MPCcore_mux_98_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => mux_case_070_fu_178,
        din1 => mux_case_172_fu_182,
        din2 => mux_case_274_fu_186,
        din3 => mux_case_376_fu_190,
        din4 => mux_case_478_fu_194,
        din5 => mux_case_580_fu_198,
        din6 => mux_case_682_fu_202,
        din7 => mux_case_784_fu_206,
        din8 => mux_case_886_fu_210,
        din9 => trunc_ln232_fu_840_p1,
        dout => rhs_V_fu_844_p11);

    mux_98_32_1_1_U1949 : component MPCcore_mux_98_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        din0 => select_ln170,
        din1 => select_ln170_1,
        din2 => select_ln170_2,
        din3 => select_ln170_3,
        din4 => select_ln170_4,
        din5 => select_ln170_5,
        din6 => select_ln170_6,
        din7 => select_ln170_7,
        din8 => select_ln170_8,
        din9 => trunc_ln232_fu_840_p1,
        dout => tmp_s_fu_1044_p11);

    mux_98_8_1_1_U1950 : component MPCcore_mux_98_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => mux_case_03022_fu_214,
        din1 => location_1_6_fu_282,
        din2 => location_2_6_fu_278,
        din3 => location_3_6_fu_274,
        din4 => location_4_6_fu_270,
        din5 => location_5_6_fu_266,
        din6 => location_6_6_fu_262,
        din7 => location_7_6_fu_258,
        din8 => location_8_6_fu_254,
        din9 => add_ln75_reg_1521,
        dout => tmp_286_fu_1119_p11);

    flow_control_loop_pipe_sequential_init_U : component MPCcore_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                if ((ap_const_logic_1 = ap_ce)) then 
                    ap_CS_fsm <= ap_NS_fsm;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    empty_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    empty_fu_162 <= p_read3;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln159_fu_890_p2))) then 
                    empty_fu_162 <= sub_ln859_fu_1059_p2;
                end if;
            end if; 
        end if;
    end process;

    helpedList_0_4_fu_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_0_4_fu_250 <= p_read32;
                elsif ((ap_const_boolean_1 = ap_condition_562)) then 
                    helpedList_0_4_fu_250 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_1_4_fu_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_1_4_fu_246 <= p_read33;
                elsif ((ap_const_boolean_1 = ap_condition_566)) then 
                    helpedList_1_4_fu_246 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_2_4_fu_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_2_4_fu_242 <= p_read34;
                elsif ((ap_const_boolean_1 = ap_condition_570)) then 
                    helpedList_2_4_fu_242 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_3_4_fu_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_3_4_fu_238 <= p_read35;
                elsif ((ap_const_boolean_1 = ap_condition_574)) then 
                    helpedList_3_4_fu_238 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_4_4_fu_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_4_4_fu_234 <= p_read36;
                elsif ((ap_const_boolean_1 = ap_condition_578)) then 
                    helpedList_4_4_fu_234 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_5_4_fu_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_5_4_fu_230 <= p_read37;
                elsif ((ap_const_boolean_1 = ap_condition_582)) then 
                    helpedList_5_4_fu_230 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_6_4_fu_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_6_4_fu_226 <= p_read38;
                elsif ((ap_const_boolean_1 = ap_condition_586)) then 
                    helpedList_6_4_fu_226 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_7_4_fu_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_7_4_fu_222 <= p_read39;
                elsif ((ap_const_boolean_1 = ap_condition_590)) then 
                    helpedList_7_4_fu_222 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    helpedList_8_4_fu_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    helpedList_8_4_fu_218 <= p_read40;
                elsif ((ap_const_boolean_1 = ap_condition_601)) then 
                    helpedList_8_4_fu_218 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    index_3_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    index_3_fu_174 <= ap_const_lv8_8;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln159_fu_890_p2))) then 
                    index_3_fu_174 <= add_ln75_fu_1065_p2;
                end if;
            end if; 
        end if;
    end process;

    indvars_iv219_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvars_iv219_fu_166 <= ap_const_lv32_8;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln159_fu_890_p2))) then 
                    indvars_iv219_fu_166 <= add_ln75_18_fu_1071_p2;
                end if;
            end if; 
        end if;
    end process;

    lhs_V_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    lhs_V_fu_170 <= p_read10;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    lhs_V_fu_170 <= tmp_286_fu_1119_p11;
                end if;
            end if; 
        end if;
    end process;

    location_0_6_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_0_6_fu_286 <= p_read11;
                elsif ((ap_const_boolean_1 = ap_condition_562)) then 
                    location_0_6_fu_286 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_1_6_fu_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_1_6_fu_282 <= p_read12;
                elsif ((ap_const_boolean_1 = ap_condition_566)) then 
                    location_1_6_fu_282 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_2_6_fu_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_2_6_fu_278 <= p_read13;
                elsif ((ap_const_boolean_1 = ap_condition_570)) then 
                    location_2_6_fu_278 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_3_6_fu_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_3_6_fu_274 <= p_read14;
                elsif ((ap_const_boolean_1 = ap_condition_574)) then 
                    location_3_6_fu_274 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_4_6_fu_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_4_6_fu_270 <= p_read15;
                elsif ((ap_const_boolean_1 = ap_condition_578)) then 
                    location_4_6_fu_270 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_5_6_fu_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_5_6_fu_266 <= p_read16;
                elsif ((ap_const_boolean_1 = ap_condition_582)) then 
                    location_5_6_fu_266 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_6_6_fu_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_6_6_fu_262 <= p_read17;
                elsif ((ap_const_boolean_1 = ap_condition_586)) then 
                    location_6_6_fu_262 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_7_6_fu_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_7_6_fu_258 <= p_read18;
                elsif ((ap_const_boolean_1 = ap_condition_590)) then 
                    location_7_6_fu_258 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    location_8_6_fu_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    location_8_6_fu_254 <= p_read19;
                elsif ((ap_const_boolean_1 = ap_condition_601)) then 
                    location_8_6_fu_254 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    mux_case_03022_fu_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mux_case_03022_fu_214 <= p_read11;
                elsif ((ap_const_boolean_1 = ap_condition_562)) then 
                    mux_case_03022_fu_214 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    mux_case_070_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mux_case_070_fu_178 <= p_read32;
                elsif ((ap_const_boolean_1 = ap_condition_562)) then 
                    mux_case_070_fu_178 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    mux_case_172_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mux_case_172_fu_182 <= p_read33;
                elsif ((ap_const_boolean_1 = ap_condition_566)) then 
                    mux_case_172_fu_182 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    mux_case_274_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mux_case_274_fu_186 <= p_read34;
                elsif ((ap_const_boolean_1 = ap_condition_570)) then 
                    mux_case_274_fu_186 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    mux_case_376_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mux_case_376_fu_190 <= p_read35;
                elsif ((ap_const_boolean_1 = ap_condition_574)) then 
                    mux_case_376_fu_190 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    mux_case_478_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mux_case_478_fu_194 <= p_read36;
                elsif ((ap_const_boolean_1 = ap_condition_578)) then 
                    mux_case_478_fu_194 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    mux_case_580_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mux_case_580_fu_198 <= p_read37;
                elsif ((ap_const_boolean_1 = ap_condition_582)) then 
                    mux_case_580_fu_198 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    mux_case_682_fu_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mux_case_682_fu_202 <= p_read38;
                elsif ((ap_const_boolean_1 = ap_condition_586)) then 
                    mux_case_682_fu_202 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    mux_case_784_fu_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mux_case_784_fu_206 <= p_read39;
                elsif ((ap_const_boolean_1 = ap_condition_590)) then 
                    mux_case_784_fu_206 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    mux_case_886_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mux_case_886_fu_210 <= p_read40;
                elsif ((ap_const_boolean_1 = ap_condition_601)) then 
                    mux_case_886_fu_210 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln159_fu_890_p2))) then
                add_ln75_reg_1521 <= add_ln75_fu_1065_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                conv3_i752_cast_reg_1510 <= conv3_i752_cast_fu_638_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln75_18_fu_1071_p2 <= std_logic_vector(unsigned(indvars_iv219_fu_166) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln75_fu_1065_p2 <= std_logic_vector(unsigned(trunc_ln232_fu_840_p1) + unsigned(ap_const_lv8_FF));
    and_ln159_fu_890_p2 <= (icmp_ln1081_fu_885_p2 and icmp_ln1077_fu_879_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_139_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
                ap_condition_139 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_562_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln159_fu_890_p2, trunc_ln172_fu_896_p1)
    begin
                ap_condition_562 <= ((trunc_ln172_fu_896_p1 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln159_fu_890_p2));
    end process;


    ap_condition_566_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln159_fu_890_p2, trunc_ln172_fu_896_p1)
    begin
                ap_condition_566 <= ((trunc_ln172_fu_896_p1 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln159_fu_890_p2));
    end process;


    ap_condition_570_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln159_fu_890_p2, trunc_ln172_fu_896_p1)
    begin
                ap_condition_570 <= ((trunc_ln172_fu_896_p1 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln159_fu_890_p2));
    end process;


    ap_condition_574_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln159_fu_890_p2, trunc_ln172_fu_896_p1)
    begin
                ap_condition_574 <= ((trunc_ln172_fu_896_p1 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln159_fu_890_p2));
    end process;


    ap_condition_578_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln159_fu_890_p2, trunc_ln172_fu_896_p1)
    begin
                ap_condition_578 <= ((trunc_ln172_fu_896_p1 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln159_fu_890_p2));
    end process;


    ap_condition_582_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln159_fu_890_p2, trunc_ln172_fu_896_p1)
    begin
                ap_condition_582 <= ((trunc_ln172_fu_896_p1 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln159_fu_890_p2));
    end process;


    ap_condition_586_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln159_fu_890_p2, trunc_ln172_fu_896_p1)
    begin
                ap_condition_586 <= ((trunc_ln172_fu_896_p1 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln159_fu_890_p2));
    end process;


    ap_condition_590_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln159_fu_890_p2, trunc_ln172_fu_896_p1)
    begin
                ap_condition_590 <= ((trunc_ln172_fu_896_p1 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln159_fu_890_p2));
    end process;


    ap_condition_601_assign_proc : process(ap_enable_reg_pp0_iter1, and_ln159_fu_890_p2, trunc_ln172_fu_896_p1)
    begin
                ap_condition_601 <= (not((trunc_ln172_fu_896_p1 = ap_const_lv4_7)) and not((trunc_ln172_fu_896_p1 = ap_const_lv4_6)) and not((trunc_ln172_fu_896_p1 = ap_const_lv4_5)) and not((trunc_ln172_fu_896_p1 = ap_const_lv4_4)) and not((trunc_ln172_fu_896_p1 = ap_const_lv4_3)) and not((trunc_ln172_fu_896_p1 = ap_const_lv4_2)) and not((trunc_ln172_fu_896_p1 = ap_const_lv4_1)) and not((trunc_ln172_fu_896_p1 = ap_const_lv4_0)) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln159_fu_890_p2));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, and_ln159_fu_890_p2)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_lhs_V_1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, lhs_V_fu_170, tmp_286_fu_1119_p11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lhs_V_1 <= tmp_286_fu_1119_p11;
        else 
            ap_sig_allocacmp_lhs_V_1 <= lhs_V_fu_170;
        end if; 
    end process;

        conv3_i752_cast_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv3_i752),32));

    helpedList_0_4_out <= helpedList_0_4_fu_250;

    helpedList_0_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_0_4_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_0_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_1_4_out <= helpedList_1_4_fu_246;

    helpedList_1_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_1_4_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_1_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_2_4_out <= helpedList_2_4_fu_242;

    helpedList_2_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_2_4_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_2_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_3_4_out <= helpedList_3_4_fu_238;

    helpedList_3_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_3_4_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_3_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_4_4_out <= helpedList_4_4_fu_234;

    helpedList_4_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_4_4_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_4_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_5_4_out <= helpedList_5_4_fu_230;

    helpedList_5_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_5_4_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_5_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_6_4_out <= helpedList_6_4_fu_226;

    helpedList_6_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_6_4_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_6_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_7_4_out <= helpedList_7_4_fu_222;

    helpedList_7_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_7_4_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_7_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    helpedList_8_4_out <= helpedList_8_4_fu_218;

    helpedList_8_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            helpedList_8_4_out_ap_vld <= ap_const_logic_1;
        else 
            helpedList_8_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1077_fu_879_p2 <= "1" when (signed(ret_V_fu_873_p2) > signed(ap_const_lv9_19)) else "0";
    icmp_ln1081_fu_885_p2 <= "1" when (signed(indvars_iv219_fu_166) > signed(conv3_i752_cast_reg_1510)) else "0";
    index_3_out <= index_3_fu_174;

    index_3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            index_3_out_ap_vld <= ap_const_logic_1;
        else 
            index_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lhs_V_out <= lhs_V_fu_170;

    lhs_V_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lhs_V_out_ap_vld <= ap_const_logic_1;
        else 
            lhs_V_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_0_6_out <= location_0_6_fu_286;

    location_0_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_0_6_out_ap_vld <= ap_const_logic_1;
        else 
            location_0_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_1_6_out <= location_1_6_fu_282;

    location_1_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_1_6_out_ap_vld <= ap_const_logic_1;
        else 
            location_1_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_2_6_out <= location_2_6_fu_278;

    location_2_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_2_6_out_ap_vld <= ap_const_logic_1;
        else 
            location_2_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_3_6_out <= location_3_6_fu_274;

    location_3_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_3_6_out_ap_vld <= ap_const_logic_1;
        else 
            location_3_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_4_6_out <= location_4_6_fu_270;

    location_4_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_4_6_out_ap_vld <= ap_const_logic_1;
        else 
            location_4_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_5_6_out <= location_5_6_fu_266;

    location_5_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_5_6_out_ap_vld <= ap_const_logic_1;
        else 
            location_5_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_6_6_out <= location_6_6_fu_262;

    location_6_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_6_6_out_ap_vld <= ap_const_logic_1;
        else 
            location_6_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_7_6_out <= location_7_6_fu_258;

    location_7_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_7_6_out_ap_vld <= ap_const_logic_1;
        else 
            location_7_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    location_8_6_out <= location_8_6_fu_254;

    location_8_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            location_8_6_out_ap_vld <= ap_const_logic_1;
        else 
            location_8_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_03022_out <= mux_case_03022_fu_214;

    mux_case_03022_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mux_case_03022_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_03022_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out <= empty_fu_162;

    p_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out_ap_vld <= ap_const_logic_1;
        else 
            p_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_873_p2 <= std_logic_vector(signed(sext_ln232_2_fu_869_p1) + signed(sext_ln232_fu_836_p1));
    rhs_V_out <= rhs_V_fu_844_p11;

    rhs_V_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rhs_V_out_ap_vld <= ap_const_logic_1;
        else 
            rhs_V_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln232_2_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_844_p11),9));

    sext_ln232_fu_836_p0 <= ap_sig_allocacmp_lhs_V_1;
        sext_ln232_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln232_fu_836_p0),9));

    sub_ln859_fu_1059_p2 <= std_logic_vector(unsigned(empty_fu_162) - unsigned(tmp_s_fu_1044_p11));
    trunc_ln172_fu_896_p1 <= indvars_iv219_fu_166(4 - 1 downto 0);
    trunc_ln232_fu_840_p1 <= indvars_iv219_fu_166(8 - 1 downto 0);
    trunc_ln7_out <= indvars_iv219_fu_166(4 - 1 downto 0);

    trunc_ln7_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, and_ln159_fu_890_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_0 = and_ln159_fu_890_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trunc_ln7_out_ap_vld <= ap_const_logic_1;
        else 
            trunc_ln7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
