-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPCcore_MPCthread is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (7 downto 0);
    INIT_index : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (7 downto 0);
    INIT_branch : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read17 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read18 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read19 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read20 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read21 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read22 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read23 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read24 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read25 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read26 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read27 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read28 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read29 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read30 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read31 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read32 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read33 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read34 : IN STD_LOGIC_VECTOR (7 downto 0);
    helper_assignment_number : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read35 : IN STD_LOGIC_VECTOR (6 downto 0);
    p_read16 : IN STD_LOGIC_VECTOR (6 downto 0);
    p_read210 : IN STD_LOGIC_VECTOR (6 downto 0);
    UBarUnc_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    UBarUnc_ce0 : OUT STD_LOGIC;
    UBarUnc_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_27 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_28 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_29 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_30 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_32 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_33 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of MPCcore_MPCthread is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal empty_fu_753_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_1381 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln822_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln822_reg_1386 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ThreadPE_fu_668_ap_start : STD_LOGIC;
    signal grp_ThreadPE_fu_668_ap_done : STD_LOGIC;
    signal grp_ThreadPE_fu_668_ap_idle : STD_LOGIC;
    signal grp_ThreadPE_fu_668_ap_ready : STD_LOGIC;
    signal grp_ThreadPE_fu_668_UBarUnc_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ThreadPE_fu_668_UBarUnc_ce0 : STD_LOGIC;
    signal grp_ThreadPE_fu_668_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_10 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_12 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_22 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_23 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_24 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_25 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_26 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_27 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_28 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_29 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_30 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_31 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_32 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ThreadPE_fu_668_ap_return_33 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ThreadPE_fu_668_ap_ce : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_phi_mux_CalcNum_0_phi_fu_365_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal CalcNum_0_reg_362 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_phi_mux_nextgate_0_phi_fu_374_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal nextgate_0_reg_371 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_index_0_phi_fu_383_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_0_reg_380 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_branch_0_phi_fu_392_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal branch_0_reg_389 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_location_0_0_phi_fu_401_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_0_0_reg_398 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_location_1_0_phi_fu_410_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_1_0_reg_407 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_location_2_0_phi_fu_419_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_2_0_reg_416 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_location_3_0_phi_fu_428_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_3_0_reg_425 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_location_4_0_phi_fu_437_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_4_0_reg_434 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_location_5_0_phi_fu_446_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_5_0_reg_443 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_location_6_0_phi_fu_455_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_6_0_reg_452 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_location_7_0_phi_fu_464_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_7_0_reg_461 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_location_8_0_phi_fu_473_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal location_8_0_reg_470 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_J_visited_0_0_phi_fu_482_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal J_visited_0_0_reg_479 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_J_visited_1_0_phi_fu_491_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal J_visited_1_0_reg_488 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_J_visited_2_0_phi_fu_500_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal J_visited_2_0_reg_497 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_J_visited_3_0_phi_fu_509_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal J_visited_3_0_reg_506 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_J_visited_4_0_phi_fu_518_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal J_visited_4_0_reg_515 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_J_visited_5_0_phi_fu_527_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal J_visited_5_0_reg_524 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_J_visited_6_0_phi_fu_536_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal J_visited_6_0_reg_533 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_J_visited_7_0_phi_fu_545_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal J_visited_7_0_reg_542 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_J_visited_8_0_phi_fu_554_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal J_visited_8_0_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_helpedList_0_0_phi_fu_563_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_0_0_reg_560 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_helpedList_1_0_phi_fu_572_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_1_0_reg_569 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_helpedList_2_0_phi_fu_581_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_2_0_reg_578 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_helpedList_3_0_phi_fu_590_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_3_0_reg_587 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_helpedList_4_0_phi_fu_599_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_4_0_reg_596 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_helpedList_5_0_phi_fu_608_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_5_0_reg_605 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_helpedList_6_0_phi_fu_617_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_6_0_reg_614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_helpedList_7_0_phi_fu_626_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_7_0_reg_623 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_helpedList_8_0_phi_fu_635_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal helpedList_8_0_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_Jmin_0_phi_fu_644_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal Jmin_0_reg_641 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_state_0_phi_fu_653_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal state_0_reg_650 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_J_current_0_phi_fu_662_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal J_current_0_reg_659 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ThreadPE_fu_668_ap_start_reg : STD_LOGIC := '0';
    signal tmp_fu_758_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_4_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_5_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_6_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_7_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_8_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_9_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_10_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_11_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_12_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_13_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_14_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_15_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_16_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_17_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_18_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_19_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_20_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_21_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_22_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_23_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_24_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_25_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_26_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_27_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_28_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_29_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_30_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_31_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_32_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_33_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_condition_4072 : BOOLEAN;
    signal ap_condition_4075 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component MPCcore_ThreadPE IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read32 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read33 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read34 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read35 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read36 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read37 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read38 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read39 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read40 : IN STD_LOGIC_VECTOR (7 downto 0);
        helper_assignment_number : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read3742 : IN STD_LOGIC_VECTOR (6 downto 0);
        p_read3843 : IN STD_LOGIC_VECTOR (6 downto 0);
        p_read3944 : IN STD_LOGIC_VECTOR (6 downto 0);
        UBarUnc_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        UBarUnc_ce0 : OUT STD_LOGIC;
        UBarUnc_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_ThreadPE_fu_668 : component MPCcore_ThreadPE
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ThreadPE_fu_668_ap_start,
        ap_done => grp_ThreadPE_fu_668_ap_done,
        ap_idle => grp_ThreadPE_fu_668_ap_idle,
        ap_ready => grp_ThreadPE_fu_668_ap_ready,
        p_read => p_read,
        p_read1 => p_read1,
        p_read4 => p_read3,
        p_read2 => empty_reg_1381,
        p_read8 => p_read5,
        p_read9 => INIT_index,
        p_read10 => p_read6,
        p_read7 => INIT_branch,
        p_read11 => p_read7,
        p_read12 => p_read8,
        p_read13 => p_read9,
        p_read14 => p_read10,
        p_read15 => p_read11,
        p_read16 => p_read12,
        p_read17 => p_read13,
        p_read18 => p_read14,
        p_read19 => p_read15,
        p_read3 => p_read4,
        p_read23 => p_read17,
        p_read24 => p_read18,
        p_read25 => p_read19,
        p_read26 => p_read20,
        p_read27 => p_read21,
        p_read28 => p_read22,
        p_read29 => p_read23,
        p_read30 => p_read24,
        p_read31 => p_read25,
        p_read32 => p_read26,
        p_read33 => p_read27,
        p_read34 => p_read28,
        p_read35 => p_read29,
        p_read36 => p_read30,
        p_read37 => p_read31,
        p_read38 => p_read32,
        p_read39 => p_read33,
        p_read40 => p_read34,
        helper_assignment_number => helper_assignment_number,
        p_read3742 => p_read35,
        p_read3843 => p_read16,
        p_read3944 => p_read210,
        UBarUnc_address0 => grp_ThreadPE_fu_668_UBarUnc_address0,
        UBarUnc_ce0 => grp_ThreadPE_fu_668_UBarUnc_ce0,
        UBarUnc_q0 => UBarUnc_q0,
        ap_return_0 => grp_ThreadPE_fu_668_ap_return_0,
        ap_return_1 => grp_ThreadPE_fu_668_ap_return_1,
        ap_return_2 => grp_ThreadPE_fu_668_ap_return_2,
        ap_return_3 => grp_ThreadPE_fu_668_ap_return_3,
        ap_return_4 => grp_ThreadPE_fu_668_ap_return_4,
        ap_return_5 => grp_ThreadPE_fu_668_ap_return_5,
        ap_return_6 => grp_ThreadPE_fu_668_ap_return_6,
        ap_return_7 => grp_ThreadPE_fu_668_ap_return_7,
        ap_return_8 => grp_ThreadPE_fu_668_ap_return_8,
        ap_return_9 => grp_ThreadPE_fu_668_ap_return_9,
        ap_return_10 => grp_ThreadPE_fu_668_ap_return_10,
        ap_return_11 => grp_ThreadPE_fu_668_ap_return_11,
        ap_return_12 => grp_ThreadPE_fu_668_ap_return_12,
        ap_return_13 => grp_ThreadPE_fu_668_ap_return_13,
        ap_return_14 => grp_ThreadPE_fu_668_ap_return_14,
        ap_return_15 => grp_ThreadPE_fu_668_ap_return_15,
        ap_return_16 => grp_ThreadPE_fu_668_ap_return_16,
        ap_return_17 => grp_ThreadPE_fu_668_ap_return_17,
        ap_return_18 => grp_ThreadPE_fu_668_ap_return_18,
        ap_return_19 => grp_ThreadPE_fu_668_ap_return_19,
        ap_return_20 => grp_ThreadPE_fu_668_ap_return_20,
        ap_return_21 => grp_ThreadPE_fu_668_ap_return_21,
        ap_return_22 => grp_ThreadPE_fu_668_ap_return_22,
        ap_return_23 => grp_ThreadPE_fu_668_ap_return_23,
        ap_return_24 => grp_ThreadPE_fu_668_ap_return_24,
        ap_return_25 => grp_ThreadPE_fu_668_ap_return_25,
        ap_return_26 => grp_ThreadPE_fu_668_ap_return_26,
        ap_return_27 => grp_ThreadPE_fu_668_ap_return_27,
        ap_return_28 => grp_ThreadPE_fu_668_ap_return_28,
        ap_return_29 => grp_ThreadPE_fu_668_ap_return_29,
        ap_return_30 => grp_ThreadPE_fu_668_ap_return_30,
        ap_return_31 => grp_ThreadPE_fu_668_ap_return_31,
        ap_return_32 => grp_ThreadPE_fu_668_ap_return_32,
        ap_return_33 => grp_ThreadPE_fu_668_ap_return_33,
        ap_ce => grp_ThreadPE_fu_668_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                if ((ap_const_logic_1 = ap_ce)) then 
                    ap_CS_fsm <= ap_NS_fsm;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_0_preg <= ap_phi_mux_CalcNum_0_phi_fu_365_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_10_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_10_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_10_preg <= ap_phi_mux_location_6_0_phi_fu_455_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_11_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_11_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_11_preg <= ap_phi_mux_location_7_0_phi_fu_464_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_12_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_12_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_12_preg <= ap_phi_mux_location_8_0_phi_fu_473_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_13_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_13_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_13_preg <= ap_phi_mux_J_visited_0_0_phi_fu_482_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_14_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_14_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_14_preg <= ap_phi_mux_J_visited_1_0_phi_fu_491_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_15_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_15_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_15_preg <= ap_phi_mux_J_visited_2_0_phi_fu_500_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_16_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_16_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_16_preg <= ap_phi_mux_J_visited_3_0_phi_fu_509_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_17_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_17_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_17_preg <= ap_phi_mux_J_visited_4_0_phi_fu_518_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_18_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_18_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_18_preg <= ap_phi_mux_J_visited_5_0_phi_fu_527_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_19_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_19_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_19_preg <= ap_phi_mux_J_visited_6_0_phi_fu_536_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_1_preg <= ap_phi_mux_nextgate_0_phi_fu_374_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_20_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_20_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_20_preg <= ap_phi_mux_J_visited_7_0_phi_fu_545_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_21_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_21_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_21_preg <= ap_phi_mux_J_visited_8_0_phi_fu_554_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_22_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_22_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_22_preg <= ap_phi_mux_helpedList_0_0_phi_fu_563_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_23_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_23_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_23_preg <= ap_phi_mux_helpedList_1_0_phi_fu_572_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_24_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_24_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_24_preg <= ap_phi_mux_helpedList_2_0_phi_fu_581_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_25_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_25_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_25_preg <= ap_phi_mux_helpedList_3_0_phi_fu_590_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_26_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_26_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_26_preg <= ap_phi_mux_helpedList_4_0_phi_fu_599_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_27_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_27_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_27_preg <= ap_phi_mux_helpedList_5_0_phi_fu_608_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_28_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_28_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_28_preg <= ap_phi_mux_helpedList_6_0_phi_fu_617_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_29_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_29_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_29_preg <= ap_phi_mux_helpedList_7_0_phi_fu_626_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_2_preg <= ap_phi_mux_index_0_phi_fu_383_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_30_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_30_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_30_preg <= ap_phi_mux_helpedList_8_0_phi_fu_635_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_31_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_31_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_31_preg <= ap_phi_mux_Jmin_0_phi_fu_644_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_32_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_32_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_32_preg <= ap_phi_mux_state_0_phi_fu_653_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_33_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_33_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_33_preg <= ap_phi_mux_J_current_0_phi_fu_662_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_3_preg <= ap_phi_mux_branch_0_phi_fu_392_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_4_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_4_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_4_preg <= ap_phi_mux_location_0_0_phi_fu_401_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_5_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_5_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_5_preg <= ap_phi_mux_location_1_0_phi_fu_410_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_6_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_6_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_6_preg <= ap_phi_mux_location_2_0_phi_fu_419_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_7_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_7_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_7_preg <= ap_phi_mux_location_3_0_phi_fu_428_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_8_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_8_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_8_preg <= ap_phi_mux_location_4_0_phi_fu_437_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_9_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_9_preg <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
                    ap_return_9_preg <= ap_phi_mux_location_5_0_phi_fu_446_p4;
                end if; 
            end if;
        end if;
    end process;


    grp_ThreadPE_fu_668_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ThreadPE_fu_668_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln822_fu_768_p2 = ap_const_lv1_1))) then 
                    grp_ThreadPE_fu_668_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ThreadPE_fu_668_ap_ready = ap_const_logic_1)) then 
                    grp_ThreadPE_fu_668_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    CalcNum_0_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    CalcNum_0_reg_362 <= p_read1;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    CalcNum_0_reg_362 <= grp_ThreadPE_fu_668_ap_return_0;
                end if;
            end if; 
        end if;
    end process;

    J_current_0_reg_659_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    J_current_0_reg_659 <= p_read4;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    J_current_0_reg_659 <= grp_ThreadPE_fu_668_ap_return_33;
                end if;
            end if; 
        end if;
    end process;

    J_visited_0_0_reg_479_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    J_visited_0_0_reg_479 <= p_read17;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    J_visited_0_0_reg_479 <= grp_ThreadPE_fu_668_ap_return_13;
                end if;
            end if; 
        end if;
    end process;

    J_visited_1_0_reg_488_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    J_visited_1_0_reg_488 <= p_read18;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    J_visited_1_0_reg_488 <= grp_ThreadPE_fu_668_ap_return_14;
                end if;
            end if; 
        end if;
    end process;

    J_visited_2_0_reg_497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    J_visited_2_0_reg_497 <= p_read19;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    J_visited_2_0_reg_497 <= grp_ThreadPE_fu_668_ap_return_15;
                end if;
            end if; 
        end if;
    end process;

    J_visited_3_0_reg_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    J_visited_3_0_reg_506 <= p_read20;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    J_visited_3_0_reg_506 <= grp_ThreadPE_fu_668_ap_return_16;
                end if;
            end if; 
        end if;
    end process;

    J_visited_4_0_reg_515_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    J_visited_4_0_reg_515 <= p_read21;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    J_visited_4_0_reg_515 <= grp_ThreadPE_fu_668_ap_return_17;
                end if;
            end if; 
        end if;
    end process;

    J_visited_5_0_reg_524_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    J_visited_5_0_reg_524 <= p_read22;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    J_visited_5_0_reg_524 <= grp_ThreadPE_fu_668_ap_return_18;
                end if;
            end if; 
        end if;
    end process;

    J_visited_6_0_reg_533_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    J_visited_6_0_reg_533 <= p_read23;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    J_visited_6_0_reg_533 <= grp_ThreadPE_fu_668_ap_return_19;
                end if;
            end if; 
        end if;
    end process;

    J_visited_7_0_reg_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    J_visited_7_0_reg_542 <= p_read24;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    J_visited_7_0_reg_542 <= grp_ThreadPE_fu_668_ap_return_20;
                end if;
            end if; 
        end if;
    end process;

    J_visited_8_0_reg_551_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    J_visited_8_0_reg_551 <= p_read25;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    J_visited_8_0_reg_551 <= grp_ThreadPE_fu_668_ap_return_21;
                end if;
            end if; 
        end if;
    end process;

    Jmin_0_reg_641_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    Jmin_0_reg_641 <= p_read;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    Jmin_0_reg_641 <= grp_ThreadPE_fu_668_ap_return_31;
                end if;
            end if; 
        end if;
    end process;

    branch_0_reg_389_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    branch_0_reg_389 <= p_read6;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    branch_0_reg_389 <= grp_ThreadPE_fu_668_ap_return_3;
                end if;
            end if; 
        end if;
    end process;

    helpedList_0_0_reg_560_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    helpedList_0_0_reg_560 <= p_read26;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    helpedList_0_0_reg_560 <= grp_ThreadPE_fu_668_ap_return_22;
                end if;
            end if; 
        end if;
    end process;

    helpedList_1_0_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    helpedList_1_0_reg_569 <= p_read27;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    helpedList_1_0_reg_569 <= grp_ThreadPE_fu_668_ap_return_23;
                end if;
            end if; 
        end if;
    end process;

    helpedList_2_0_reg_578_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    helpedList_2_0_reg_578 <= p_read28;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    helpedList_2_0_reg_578 <= grp_ThreadPE_fu_668_ap_return_24;
                end if;
            end if; 
        end if;
    end process;

    helpedList_3_0_reg_587_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    helpedList_3_0_reg_587 <= p_read29;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    helpedList_3_0_reg_587 <= grp_ThreadPE_fu_668_ap_return_25;
                end if;
            end if; 
        end if;
    end process;

    helpedList_4_0_reg_596_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    helpedList_4_0_reg_596 <= p_read30;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    helpedList_4_0_reg_596 <= grp_ThreadPE_fu_668_ap_return_26;
                end if;
            end if; 
        end if;
    end process;

    helpedList_5_0_reg_605_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    helpedList_5_0_reg_605 <= p_read31;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    helpedList_5_0_reg_605 <= grp_ThreadPE_fu_668_ap_return_27;
                end if;
            end if; 
        end if;
    end process;

    helpedList_6_0_reg_614_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    helpedList_6_0_reg_614 <= p_read32;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    helpedList_6_0_reg_614 <= grp_ThreadPE_fu_668_ap_return_28;
                end if;
            end if; 
        end if;
    end process;

    helpedList_7_0_reg_623_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    helpedList_7_0_reg_623 <= p_read33;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    helpedList_7_0_reg_623 <= grp_ThreadPE_fu_668_ap_return_29;
                end if;
            end if; 
        end if;
    end process;

    helpedList_8_0_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    helpedList_8_0_reg_632 <= p_read34;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    helpedList_8_0_reg_632 <= grp_ThreadPE_fu_668_ap_return_30;
                end if;
            end if; 
        end if;
    end process;

    index_0_reg_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    index_0_reg_380 <= p_read5;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    index_0_reg_380 <= grp_ThreadPE_fu_668_ap_return_2;
                end if;
            end if; 
        end if;
    end process;

    location_0_0_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    location_0_0_reg_398 <= p_read7;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    location_0_0_reg_398 <= grp_ThreadPE_fu_668_ap_return_4;
                end if;
            end if; 
        end if;
    end process;

    location_1_0_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    location_1_0_reg_407 <= p_read8;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    location_1_0_reg_407 <= grp_ThreadPE_fu_668_ap_return_5;
                end if;
            end if; 
        end if;
    end process;

    location_2_0_reg_416_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    location_2_0_reg_416 <= p_read9;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    location_2_0_reg_416 <= grp_ThreadPE_fu_668_ap_return_6;
                end if;
            end if; 
        end if;
    end process;

    location_3_0_reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    location_3_0_reg_425 <= p_read10;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    location_3_0_reg_425 <= grp_ThreadPE_fu_668_ap_return_7;
                end if;
            end if; 
        end if;
    end process;

    location_4_0_reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    location_4_0_reg_434 <= p_read11;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    location_4_0_reg_434 <= grp_ThreadPE_fu_668_ap_return_8;
                end if;
            end if; 
        end if;
    end process;

    location_5_0_reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    location_5_0_reg_443 <= p_read12;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    location_5_0_reg_443 <= grp_ThreadPE_fu_668_ap_return_9;
                end if;
            end if; 
        end if;
    end process;

    location_6_0_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    location_6_0_reg_452 <= p_read13;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    location_6_0_reg_452 <= grp_ThreadPE_fu_668_ap_return_10;
                end if;
            end if; 
        end if;
    end process;

    location_7_0_reg_461_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    location_7_0_reg_461 <= p_read14;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    location_7_0_reg_461 <= grp_ThreadPE_fu_668_ap_return_11;
                end if;
            end if; 
        end if;
    end process;

    location_8_0_reg_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    location_8_0_reg_470 <= p_read15;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    location_8_0_reg_470 <= grp_ThreadPE_fu_668_ap_return_12;
                end if;
            end if; 
        end if;
    end process;

    nextgate_0_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    nextgate_0_reg_371 <= p_read3;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    nextgate_0_reg_371 <= grp_ThreadPE_fu_668_ap_return_1;
                end if;
            end if; 
        end if;
    end process;

    state_0_reg_650_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_4075)) then 
                    state_0_reg_650 <= p_read2;
                elsif ((ap_const_boolean_1 = ap_condition_4072)) then 
                    state_0_reg_650 <= grp_ThreadPE_fu_668_ap_return_32;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_reg_1381 <= empty_fu_753_p1;
                icmp_ln822_reg_1386 <= icmp_ln822_fu_768_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    UBarUnc_address0 <= grp_ThreadPE_fu_668_UBarUnc_address0;
    UBarUnc_ce0 <= grp_ThreadPE_fu_668_UBarUnc_ce0;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_ce)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_const_logic_0 = ap_ce))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_ce, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_0 = ap_ce) or (ap_const_boolean_1 = ap_block_state2_on_subcall_done))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_ThreadPE_fu_668_ap_done = ap_const_logic_0) and (icmp_ln822_reg_1386 = ap_const_lv1_1));
    end process;


    ap_condition_4072_assign_proc : process(icmp_ln822_reg_1386, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
                ap_condition_4072 <= ((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1));
    end process;


    ap_condition_4075_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln822_fu_768_p2)
    begin
                ap_condition_4075 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln822_fu_768_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_CalcNum_0_phi_fu_365_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_0, ap_CS_fsm_state2, CalcNum_0_reg_362)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_CalcNum_0_phi_fu_365_p4 <= grp_ThreadPE_fu_668_ap_return_0;
        else 
            ap_phi_mux_CalcNum_0_phi_fu_365_p4 <= CalcNum_0_reg_362;
        end if; 
    end process;


    ap_phi_mux_J_current_0_phi_fu_662_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_33, ap_CS_fsm_state2, J_current_0_reg_659)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_J_current_0_phi_fu_662_p4 <= grp_ThreadPE_fu_668_ap_return_33;
        else 
            ap_phi_mux_J_current_0_phi_fu_662_p4 <= J_current_0_reg_659;
        end if; 
    end process;


    ap_phi_mux_J_visited_0_0_phi_fu_482_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_13, ap_CS_fsm_state2, J_visited_0_0_reg_479)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_J_visited_0_0_phi_fu_482_p4 <= grp_ThreadPE_fu_668_ap_return_13;
        else 
            ap_phi_mux_J_visited_0_0_phi_fu_482_p4 <= J_visited_0_0_reg_479;
        end if; 
    end process;


    ap_phi_mux_J_visited_1_0_phi_fu_491_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_14, ap_CS_fsm_state2, J_visited_1_0_reg_488)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_J_visited_1_0_phi_fu_491_p4 <= grp_ThreadPE_fu_668_ap_return_14;
        else 
            ap_phi_mux_J_visited_1_0_phi_fu_491_p4 <= J_visited_1_0_reg_488;
        end if; 
    end process;


    ap_phi_mux_J_visited_2_0_phi_fu_500_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_15, ap_CS_fsm_state2, J_visited_2_0_reg_497)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_J_visited_2_0_phi_fu_500_p4 <= grp_ThreadPE_fu_668_ap_return_15;
        else 
            ap_phi_mux_J_visited_2_0_phi_fu_500_p4 <= J_visited_2_0_reg_497;
        end if; 
    end process;


    ap_phi_mux_J_visited_3_0_phi_fu_509_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_16, ap_CS_fsm_state2, J_visited_3_0_reg_506)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_J_visited_3_0_phi_fu_509_p4 <= grp_ThreadPE_fu_668_ap_return_16;
        else 
            ap_phi_mux_J_visited_3_0_phi_fu_509_p4 <= J_visited_3_0_reg_506;
        end if; 
    end process;


    ap_phi_mux_J_visited_4_0_phi_fu_518_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_17, ap_CS_fsm_state2, J_visited_4_0_reg_515)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_J_visited_4_0_phi_fu_518_p4 <= grp_ThreadPE_fu_668_ap_return_17;
        else 
            ap_phi_mux_J_visited_4_0_phi_fu_518_p4 <= J_visited_4_0_reg_515;
        end if; 
    end process;


    ap_phi_mux_J_visited_5_0_phi_fu_527_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_18, ap_CS_fsm_state2, J_visited_5_0_reg_524)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_J_visited_5_0_phi_fu_527_p4 <= grp_ThreadPE_fu_668_ap_return_18;
        else 
            ap_phi_mux_J_visited_5_0_phi_fu_527_p4 <= J_visited_5_0_reg_524;
        end if; 
    end process;


    ap_phi_mux_J_visited_6_0_phi_fu_536_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_19, ap_CS_fsm_state2, J_visited_6_0_reg_533)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_J_visited_6_0_phi_fu_536_p4 <= grp_ThreadPE_fu_668_ap_return_19;
        else 
            ap_phi_mux_J_visited_6_0_phi_fu_536_p4 <= J_visited_6_0_reg_533;
        end if; 
    end process;


    ap_phi_mux_J_visited_7_0_phi_fu_545_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_20, ap_CS_fsm_state2, J_visited_7_0_reg_542)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_J_visited_7_0_phi_fu_545_p4 <= grp_ThreadPE_fu_668_ap_return_20;
        else 
            ap_phi_mux_J_visited_7_0_phi_fu_545_p4 <= J_visited_7_0_reg_542;
        end if; 
    end process;


    ap_phi_mux_J_visited_8_0_phi_fu_554_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_21, ap_CS_fsm_state2, J_visited_8_0_reg_551)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_J_visited_8_0_phi_fu_554_p4 <= grp_ThreadPE_fu_668_ap_return_21;
        else 
            ap_phi_mux_J_visited_8_0_phi_fu_554_p4 <= J_visited_8_0_reg_551;
        end if; 
    end process;


    ap_phi_mux_Jmin_0_phi_fu_644_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_31, ap_CS_fsm_state2, Jmin_0_reg_641)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_Jmin_0_phi_fu_644_p4 <= grp_ThreadPE_fu_668_ap_return_31;
        else 
            ap_phi_mux_Jmin_0_phi_fu_644_p4 <= Jmin_0_reg_641;
        end if; 
    end process;


    ap_phi_mux_branch_0_phi_fu_392_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_3, ap_CS_fsm_state2, branch_0_reg_389)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_branch_0_phi_fu_392_p4 <= grp_ThreadPE_fu_668_ap_return_3;
        else 
            ap_phi_mux_branch_0_phi_fu_392_p4 <= branch_0_reg_389;
        end if; 
    end process;


    ap_phi_mux_helpedList_0_0_phi_fu_563_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_22, ap_CS_fsm_state2, helpedList_0_0_reg_560)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_helpedList_0_0_phi_fu_563_p4 <= grp_ThreadPE_fu_668_ap_return_22;
        else 
            ap_phi_mux_helpedList_0_0_phi_fu_563_p4 <= helpedList_0_0_reg_560;
        end if; 
    end process;


    ap_phi_mux_helpedList_1_0_phi_fu_572_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_23, ap_CS_fsm_state2, helpedList_1_0_reg_569)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_helpedList_1_0_phi_fu_572_p4 <= grp_ThreadPE_fu_668_ap_return_23;
        else 
            ap_phi_mux_helpedList_1_0_phi_fu_572_p4 <= helpedList_1_0_reg_569;
        end if; 
    end process;


    ap_phi_mux_helpedList_2_0_phi_fu_581_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_24, ap_CS_fsm_state2, helpedList_2_0_reg_578)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_helpedList_2_0_phi_fu_581_p4 <= grp_ThreadPE_fu_668_ap_return_24;
        else 
            ap_phi_mux_helpedList_2_0_phi_fu_581_p4 <= helpedList_2_0_reg_578;
        end if; 
    end process;


    ap_phi_mux_helpedList_3_0_phi_fu_590_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_25, ap_CS_fsm_state2, helpedList_3_0_reg_587)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_helpedList_3_0_phi_fu_590_p4 <= grp_ThreadPE_fu_668_ap_return_25;
        else 
            ap_phi_mux_helpedList_3_0_phi_fu_590_p4 <= helpedList_3_0_reg_587;
        end if; 
    end process;


    ap_phi_mux_helpedList_4_0_phi_fu_599_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_26, ap_CS_fsm_state2, helpedList_4_0_reg_596)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_helpedList_4_0_phi_fu_599_p4 <= grp_ThreadPE_fu_668_ap_return_26;
        else 
            ap_phi_mux_helpedList_4_0_phi_fu_599_p4 <= helpedList_4_0_reg_596;
        end if; 
    end process;


    ap_phi_mux_helpedList_5_0_phi_fu_608_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_27, ap_CS_fsm_state2, helpedList_5_0_reg_605)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_helpedList_5_0_phi_fu_608_p4 <= grp_ThreadPE_fu_668_ap_return_27;
        else 
            ap_phi_mux_helpedList_5_0_phi_fu_608_p4 <= helpedList_5_0_reg_605;
        end if; 
    end process;


    ap_phi_mux_helpedList_6_0_phi_fu_617_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_28, ap_CS_fsm_state2, helpedList_6_0_reg_614)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_helpedList_6_0_phi_fu_617_p4 <= grp_ThreadPE_fu_668_ap_return_28;
        else 
            ap_phi_mux_helpedList_6_0_phi_fu_617_p4 <= helpedList_6_0_reg_614;
        end if; 
    end process;


    ap_phi_mux_helpedList_7_0_phi_fu_626_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_29, ap_CS_fsm_state2, helpedList_7_0_reg_623)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_helpedList_7_0_phi_fu_626_p4 <= grp_ThreadPE_fu_668_ap_return_29;
        else 
            ap_phi_mux_helpedList_7_0_phi_fu_626_p4 <= helpedList_7_0_reg_623;
        end if; 
    end process;


    ap_phi_mux_helpedList_8_0_phi_fu_635_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_30, ap_CS_fsm_state2, helpedList_8_0_reg_632)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_helpedList_8_0_phi_fu_635_p4 <= grp_ThreadPE_fu_668_ap_return_30;
        else 
            ap_phi_mux_helpedList_8_0_phi_fu_635_p4 <= helpedList_8_0_reg_632;
        end if; 
    end process;


    ap_phi_mux_index_0_phi_fu_383_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_2, ap_CS_fsm_state2, index_0_reg_380)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_index_0_phi_fu_383_p4 <= grp_ThreadPE_fu_668_ap_return_2;
        else 
            ap_phi_mux_index_0_phi_fu_383_p4 <= index_0_reg_380;
        end if; 
    end process;


    ap_phi_mux_location_0_0_phi_fu_401_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_4, ap_CS_fsm_state2, location_0_0_reg_398)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_location_0_0_phi_fu_401_p4 <= grp_ThreadPE_fu_668_ap_return_4;
        else 
            ap_phi_mux_location_0_0_phi_fu_401_p4 <= location_0_0_reg_398;
        end if; 
    end process;


    ap_phi_mux_location_1_0_phi_fu_410_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_5, ap_CS_fsm_state2, location_1_0_reg_407)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_location_1_0_phi_fu_410_p4 <= grp_ThreadPE_fu_668_ap_return_5;
        else 
            ap_phi_mux_location_1_0_phi_fu_410_p4 <= location_1_0_reg_407;
        end if; 
    end process;


    ap_phi_mux_location_2_0_phi_fu_419_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_6, ap_CS_fsm_state2, location_2_0_reg_416)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_location_2_0_phi_fu_419_p4 <= grp_ThreadPE_fu_668_ap_return_6;
        else 
            ap_phi_mux_location_2_0_phi_fu_419_p4 <= location_2_0_reg_416;
        end if; 
    end process;


    ap_phi_mux_location_3_0_phi_fu_428_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_7, ap_CS_fsm_state2, location_3_0_reg_425)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_location_3_0_phi_fu_428_p4 <= grp_ThreadPE_fu_668_ap_return_7;
        else 
            ap_phi_mux_location_3_0_phi_fu_428_p4 <= location_3_0_reg_425;
        end if; 
    end process;


    ap_phi_mux_location_4_0_phi_fu_437_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_8, ap_CS_fsm_state2, location_4_0_reg_434)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_location_4_0_phi_fu_437_p4 <= grp_ThreadPE_fu_668_ap_return_8;
        else 
            ap_phi_mux_location_4_0_phi_fu_437_p4 <= location_4_0_reg_434;
        end if; 
    end process;


    ap_phi_mux_location_5_0_phi_fu_446_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_9, ap_CS_fsm_state2, location_5_0_reg_443)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_location_5_0_phi_fu_446_p4 <= grp_ThreadPE_fu_668_ap_return_9;
        else 
            ap_phi_mux_location_5_0_phi_fu_446_p4 <= location_5_0_reg_443;
        end if; 
    end process;


    ap_phi_mux_location_6_0_phi_fu_455_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_10, ap_CS_fsm_state2, location_6_0_reg_452)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_location_6_0_phi_fu_455_p4 <= grp_ThreadPE_fu_668_ap_return_10;
        else 
            ap_phi_mux_location_6_0_phi_fu_455_p4 <= location_6_0_reg_452;
        end if; 
    end process;


    ap_phi_mux_location_7_0_phi_fu_464_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_11, ap_CS_fsm_state2, location_7_0_reg_461)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_location_7_0_phi_fu_464_p4 <= grp_ThreadPE_fu_668_ap_return_11;
        else 
            ap_phi_mux_location_7_0_phi_fu_464_p4 <= location_7_0_reg_461;
        end if; 
    end process;


    ap_phi_mux_location_8_0_phi_fu_473_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_12, ap_CS_fsm_state2, location_8_0_reg_470)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_location_8_0_phi_fu_473_p4 <= grp_ThreadPE_fu_668_ap_return_12;
        else 
            ap_phi_mux_location_8_0_phi_fu_473_p4 <= location_8_0_reg_470;
        end if; 
    end process;


    ap_phi_mux_nextgate_0_phi_fu_374_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_1, ap_CS_fsm_state2, nextgate_0_reg_371)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_nextgate_0_phi_fu_374_p4 <= grp_ThreadPE_fu_668_ap_return_1;
        else 
            ap_phi_mux_nextgate_0_phi_fu_374_p4 <= nextgate_0_reg_371;
        end if; 
    end process;


    ap_phi_mux_state_0_phi_fu_653_p4_assign_proc : process(icmp_ln822_reg_1386, grp_ThreadPE_fu_668_ap_return_32, ap_CS_fsm_state2, state_0_reg_650)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln822_reg_1386 = ap_const_lv1_1))) then 
            ap_phi_mux_state_0_phi_fu_653_p4 <= grp_ThreadPE_fu_668_ap_return_32;
        else 
            ap_phi_mux_state_0_phi_fu_653_p4 <= state_0_reg_650;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_phi_mux_CalcNum_0_phi_fu_365_p4, ap_block_state2_on_subcall_done, ap_return_0_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_0 <= ap_phi_mux_CalcNum_0_phi_fu_365_p4;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_nextgate_0_phi_fu_374_p4, ap_return_1_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_1 <= ap_phi_mux_nextgate_0_phi_fu_374_p4;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_10_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_location_6_0_phi_fu_455_p4, ap_return_10_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_10 <= ap_phi_mux_location_6_0_phi_fu_455_p4;
        else 
            ap_return_10 <= ap_return_10_preg;
        end if; 
    end process;


    ap_return_11_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_location_7_0_phi_fu_464_p4, ap_return_11_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_11 <= ap_phi_mux_location_7_0_phi_fu_464_p4;
        else 
            ap_return_11 <= ap_return_11_preg;
        end if; 
    end process;


    ap_return_12_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_location_8_0_phi_fu_473_p4, ap_return_12_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_12 <= ap_phi_mux_location_8_0_phi_fu_473_p4;
        else 
            ap_return_12 <= ap_return_12_preg;
        end if; 
    end process;


    ap_return_13_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_J_visited_0_0_phi_fu_482_p4, ap_return_13_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_13 <= ap_phi_mux_J_visited_0_0_phi_fu_482_p4;
        else 
            ap_return_13 <= ap_return_13_preg;
        end if; 
    end process;


    ap_return_14_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_J_visited_1_0_phi_fu_491_p4, ap_return_14_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_14 <= ap_phi_mux_J_visited_1_0_phi_fu_491_p4;
        else 
            ap_return_14 <= ap_return_14_preg;
        end if; 
    end process;


    ap_return_15_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_J_visited_2_0_phi_fu_500_p4, ap_return_15_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_15 <= ap_phi_mux_J_visited_2_0_phi_fu_500_p4;
        else 
            ap_return_15 <= ap_return_15_preg;
        end if; 
    end process;


    ap_return_16_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_J_visited_3_0_phi_fu_509_p4, ap_return_16_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_16 <= ap_phi_mux_J_visited_3_0_phi_fu_509_p4;
        else 
            ap_return_16 <= ap_return_16_preg;
        end if; 
    end process;


    ap_return_17_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_J_visited_4_0_phi_fu_518_p4, ap_return_17_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_17 <= ap_phi_mux_J_visited_4_0_phi_fu_518_p4;
        else 
            ap_return_17 <= ap_return_17_preg;
        end if; 
    end process;


    ap_return_18_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_J_visited_5_0_phi_fu_527_p4, ap_return_18_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_18 <= ap_phi_mux_J_visited_5_0_phi_fu_527_p4;
        else 
            ap_return_18 <= ap_return_18_preg;
        end if; 
    end process;


    ap_return_19_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_J_visited_6_0_phi_fu_536_p4, ap_return_19_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_19 <= ap_phi_mux_J_visited_6_0_phi_fu_536_p4;
        else 
            ap_return_19 <= ap_return_19_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_index_0_phi_fu_383_p4, ap_return_2_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_2 <= ap_phi_mux_index_0_phi_fu_383_p4;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_20_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_J_visited_7_0_phi_fu_545_p4, ap_return_20_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_20 <= ap_phi_mux_J_visited_7_0_phi_fu_545_p4;
        else 
            ap_return_20 <= ap_return_20_preg;
        end if; 
    end process;


    ap_return_21_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_J_visited_8_0_phi_fu_554_p4, ap_return_21_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_21 <= ap_phi_mux_J_visited_8_0_phi_fu_554_p4;
        else 
            ap_return_21 <= ap_return_21_preg;
        end if; 
    end process;


    ap_return_22_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_helpedList_0_0_phi_fu_563_p4, ap_return_22_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_22 <= ap_phi_mux_helpedList_0_0_phi_fu_563_p4;
        else 
            ap_return_22 <= ap_return_22_preg;
        end if; 
    end process;


    ap_return_23_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_helpedList_1_0_phi_fu_572_p4, ap_return_23_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_23 <= ap_phi_mux_helpedList_1_0_phi_fu_572_p4;
        else 
            ap_return_23 <= ap_return_23_preg;
        end if; 
    end process;


    ap_return_24_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_helpedList_2_0_phi_fu_581_p4, ap_return_24_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_24 <= ap_phi_mux_helpedList_2_0_phi_fu_581_p4;
        else 
            ap_return_24 <= ap_return_24_preg;
        end if; 
    end process;


    ap_return_25_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_helpedList_3_0_phi_fu_590_p4, ap_return_25_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_25 <= ap_phi_mux_helpedList_3_0_phi_fu_590_p4;
        else 
            ap_return_25 <= ap_return_25_preg;
        end if; 
    end process;


    ap_return_26_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_helpedList_4_0_phi_fu_599_p4, ap_return_26_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_26 <= ap_phi_mux_helpedList_4_0_phi_fu_599_p4;
        else 
            ap_return_26 <= ap_return_26_preg;
        end if; 
    end process;


    ap_return_27_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_helpedList_5_0_phi_fu_608_p4, ap_return_27_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_27 <= ap_phi_mux_helpedList_5_0_phi_fu_608_p4;
        else 
            ap_return_27 <= ap_return_27_preg;
        end if; 
    end process;


    ap_return_28_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_helpedList_6_0_phi_fu_617_p4, ap_return_28_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_28 <= ap_phi_mux_helpedList_6_0_phi_fu_617_p4;
        else 
            ap_return_28 <= ap_return_28_preg;
        end if; 
    end process;


    ap_return_29_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_helpedList_7_0_phi_fu_626_p4, ap_return_29_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_29 <= ap_phi_mux_helpedList_7_0_phi_fu_626_p4;
        else 
            ap_return_29 <= ap_return_29_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_branch_0_phi_fu_392_p4, ap_return_3_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_3 <= ap_phi_mux_branch_0_phi_fu_392_p4;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    ap_return_30_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_helpedList_8_0_phi_fu_635_p4, ap_return_30_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_30 <= ap_phi_mux_helpedList_8_0_phi_fu_635_p4;
        else 
            ap_return_30 <= ap_return_30_preg;
        end if; 
    end process;


    ap_return_31_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_Jmin_0_phi_fu_644_p4, ap_return_31_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_31 <= ap_phi_mux_Jmin_0_phi_fu_644_p4;
        else 
            ap_return_31 <= ap_return_31_preg;
        end if; 
    end process;


    ap_return_32_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_state_0_phi_fu_653_p4, ap_return_32_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_32 <= ap_phi_mux_state_0_phi_fu_653_p4;
        else 
            ap_return_32 <= ap_return_32_preg;
        end if; 
    end process;


    ap_return_33_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_J_current_0_phi_fu_662_p4, ap_return_33_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_33 <= ap_phi_mux_J_current_0_phi_fu_662_p4;
        else 
            ap_return_33 <= ap_return_33_preg;
        end if; 
    end process;


    ap_return_4_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_location_0_0_phi_fu_401_p4, ap_return_4_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_4 <= ap_phi_mux_location_0_0_phi_fu_401_p4;
        else 
            ap_return_4 <= ap_return_4_preg;
        end if; 
    end process;


    ap_return_5_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_location_1_0_phi_fu_410_p4, ap_return_5_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_5 <= ap_phi_mux_location_1_0_phi_fu_410_p4;
        else 
            ap_return_5 <= ap_return_5_preg;
        end if; 
    end process;


    ap_return_6_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_location_2_0_phi_fu_419_p4, ap_return_6_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_6 <= ap_phi_mux_location_2_0_phi_fu_419_p4;
        else 
            ap_return_6 <= ap_return_6_preg;
        end if; 
    end process;


    ap_return_7_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_location_3_0_phi_fu_428_p4, ap_return_7_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_7 <= ap_phi_mux_location_3_0_phi_fu_428_p4;
        else 
            ap_return_7 <= ap_return_7_preg;
        end if; 
    end process;


    ap_return_8_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_location_4_0_phi_fu_437_p4, ap_return_8_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_8 <= ap_phi_mux_location_4_0_phi_fu_437_p4;
        else 
            ap_return_8 <= ap_return_8_preg;
        end if; 
    end process;


    ap_return_9_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_phi_mux_location_5_0_phi_fu_446_p4, ap_return_9_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then 
            ap_return_9 <= ap_phi_mux_location_5_0_phi_fu_446_p4;
        else 
            ap_return_9 <= ap_return_9_preg;
        end if; 
    end process;

    empty_fu_753_p1 <= p_read2(1 - 1 downto 0);

    grp_ThreadPE_fu_668_ap_ce_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))))) then 
            grp_ThreadPE_fu_668_ap_ce <= ap_const_logic_1;
        else 
            grp_ThreadPE_fu_668_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_ThreadPE_fu_668_ap_start <= grp_ThreadPE_fu_668_ap_start_reg;
    icmp_ln822_fu_768_p2 <= "1" when (tmp_fu_758_p4 = ap_const_lv7_0) else "0";
    tmp_fu_758_p4 <= p_read2(7 downto 1);
end behav;
